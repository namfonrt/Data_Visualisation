<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1206.1554                               -->
<workbook original-version='10.4' source-build='10.4.2 (10400.17.1206.1554)' source-platform='win' version='10.4' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='ProvincialEconomicForecasts' path='/workbooks' revision='3.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='pop by country of birth (Dataset)' inline='true' name='federated.09pwp2w0g4yec61fvdby505fhl6x' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Dataset' name='excel-direct.0x23x950wywwel144ve2x1l33d42'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/namfon_nut/Desktop/Sem 1/COMP6234 - Data Visualisation/Coursework/Report/Week 15/Born oversea/Dataset.xlsx' interpretationMode='1' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Total ].[Year]' />
              <expression op='[pop by country of birth_].[Year]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0x23x950wywwel144ve2x1l33d42' name='Total ' table='[&apos;Total $&apos;]' type='table'>
            <columns gridOrigin='A1:Q26:no:A1:Q26:1' lost='0' outcome='1' processed='425'>
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
              <column datatype='integer' name='Number of Australian-born' ordinal='1' />
              <column datatype='real' name='% of Australian born' ordinal='2' />
              <column datatype='real' name='% change from previous year Australian' ordinal='3' />
              <column datatype='integer' name='Number of  overseas-born' ordinal='4' />
              <column datatype='real' name='% change from previous year oversea' ordinal='5' />
              <column datatype='real' name='% of oversea-born' ordinal='6' />
              <column datatype='integer' name='Total Population' ordinal='7' />
              <column datatype='integer' name='OCEANIA AND ANTARCTICA' ordinal='8' />
              <column datatype='integer' name='NORTH-WEST EUROPE' ordinal='9' />
              <column datatype='integer' name='SOUTHERN AND EASTERN EUROPE' ordinal='10' />
              <column datatype='integer' name='NORTH AFRICA AND THE MIDDLE EAST' ordinal='11' />
              <column datatype='integer' name='SOUTH-EAST ASIA' ordinal='12' />
              <column datatype='integer' name='NORTH-EAST ASIA' ordinal='13' />
              <column datatype='integer' name='SOUTHERN AND CENTRAL ASIA' ordinal='14' />
              <column datatype='integer' name='AMERICAS' ordinal='15' />
              <column datatype='integer' name='SUB-SAHARAN AFRICA' ordinal='16' />
            </columns>
          </relation>
          <relation connection='excel-direct.0x23x950wywwel144ve2x1l33d42' name='pop by country of birth_' table='[&apos;pop by country of birth_$&apos;]' type='table'>
            <columns gridOrigin='A1:F6001:no:A1:F6001:1' lost='0' outcome='1' processed='24000'>
              <column datatype='string' name='Country of birth' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
              <column datatype='integer' name='Number of people' ordinal='2' />
              <column datatype='string' name='Continent' ordinal='3' />
              <column datatype='integer' name='Total Population' ordinal='4' />
              <column datatype='real' name='% people' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[% change from previous year Australian]' value='[Total ].[% change from previous year Australian]' />
          <map key='[% change from previous year oversea]' value='[Total ].[% change from previous year oversea]' />
          <map key='[% of Australian born]' value='[Total ].[% of Australian born]' />
          <map key='[% of oversea-born]' value='[Total ].[% of oversea-born]' />
          <map key='[% people]' value='[pop by country of birth_].[% people]' />
          <map key='[AMERICAS]' value='[Total ].[AMERICAS]' />
          <map key='[Continent]' value='[pop by country of birth_].[Continent]' />
          <map key='[Country of birth]' value='[pop by country of birth_].[Country of birth]' />
          <map key='[NORTH AFRICA AND THE MIDDLE EAST]' value='[Total ].[NORTH AFRICA AND THE MIDDLE EAST]' />
          <map key='[NORTH-EAST ASIA]' value='[Total ].[NORTH-EAST ASIA]' />
          <map key='[NORTH-WEST EUROPE]' value='[Total ].[NORTH-WEST EUROPE]' />
          <map key='[Number of  overseas-born]' value='[Total ].[Number of  overseas-born]' />
          <map key='[Number of Australian-born]' value='[Total ].[Number of Australian-born]' />
          <map key='[Number of people]' value='[pop by country of birth_].[Number of people]' />
          <map key='[OCEANIA AND ANTARCTICA]' value='[Total ].[OCEANIA AND ANTARCTICA]' />
          <map key='[SOUTH-EAST ASIA]' value='[Total ].[SOUTH-EAST ASIA]' />
          <map key='[SOUTHERN AND CENTRAL ASIA]' value='[Total ].[SOUTHERN AND CENTRAL ASIA]' />
          <map key='[SOUTHERN AND EASTERN EUROPE]' value='[Total ].[SOUTHERN AND EASTERN EUROPE]' />
          <map key='[SUB-SAHARAN AFRICA]' value='[Total ].[SUB-SAHARAN AFRICA]' />
          <map key='[Total Population (pop by country of birth!)]' value='[pop by country of birth_].[Total Population]' />
          <map key='[Total Population]' value='[Total ].[Total Population]' />
          <map key='[Year (pop by country of birth!)]' value='[pop by country of birth_].[Year]' />
          <map key='[Year]' value='[Total ].[Year]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total ]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q26:no:A1:Q26:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>425</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Australian-born</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Australian-born]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>Number of Australian-born</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of Australian born</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of Australian born]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>% of Australian born</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% change from previous year Australian</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% change from previous year Australian]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>% change from previous year Australian</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of  overseas-born</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of  overseas-born]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>Number of  overseas-born</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% change from previous year oversea</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% change from previous year oversea]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>% change from previous year oversea</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of oversea-born</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of oversea-born]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>% of oversea-born</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Population]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>Total Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OCEANIA AND ANTARCTICA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OCEANIA AND ANTARCTICA]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>OCEANIA AND ANTARCTICA</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NORTH-WEST EUROPE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NORTH-WEST EUROPE]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>NORTH-WEST EUROPE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SOUTHERN AND EASTERN EUROPE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SOUTHERN AND EASTERN EUROPE]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>SOUTHERN AND EASTERN EUROPE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NORTH AFRICA AND THE MIDDLE EAST</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NORTH AFRICA AND THE MIDDLE EAST]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>NORTH AFRICA AND THE MIDDLE EAST</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SOUTH-EAST ASIA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SOUTH-EAST ASIA]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>SOUTH-EAST ASIA</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NORTH-EAST ASIA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NORTH-EAST ASIA]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>NORTH-EAST ASIA</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SOUTHERN AND CENTRAL ASIA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SOUTHERN AND CENTRAL ASIA]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>SOUTHERN AND CENTRAL ASIA</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMERICAS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AMERICAS]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>AMERICAS</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUB-SAHARAN AFRICA</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUB-SAHARAN AFRICA]</local-name>
            <parent-name>[Total ]</parent-name>
            <remote-alias>SUB-SAHARAN AFRICA</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pop by country of birth_]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F6001:no:A1:F6001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>24000</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country of birth</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country of birth]</local-name>
            <parent-name>[pop by country of birth_]</parent-name>
            <remote-alias>Country of birth</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (pop by country of birth!)]</local-name>
            <parent-name>[pop by country of birth_]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of people</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of people]</local-name>
            <parent-name>[pop by country of birth_]</parent-name>
            <remote-alias>Number of people</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[pop by country of birth_]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Population (pop by country of birth!)]</local-name>
            <parent-name>[pop by country of birth_]</parent-name>
            <remote-alias>Total Population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% people</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% people]</local-name>
            <parent-name>[pop by country of birth_]</parent-name>
            <remote-alias>% people</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[% change from previous year Australian]' role='measure' type='quantitative' />
      <column datatype='real' name='[% change from previous year oversea]' role='measure' type='quantitative' />
      <column datatype='real' name='[% of Australian born]' role='measure' type='quantitative' />
      <column caption='% Of Oversea-Born' datatype='real' name='[% of oversea-born]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]&quot;' value='Migrants' />
          <alias key='&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of Australian-born:qk]&quot;' value='Australian' />
        </aliases>
      </column>
      <column datatype='string' name='[Continent_group]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country of birth]' new-bin='true'>
          <bin default-name='false' value='&quot;Americas&quot;'>
            <value>&quot;Anguilla&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Bahamas&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Bolivia, Plurinational State of&quot;</value>
            <value>&quot;Bonaire, Sint Eustatius and Saba&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Cayman Islands&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Curacao&quot;</value>
            <value>&quot;Dominica&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Falkland Islands&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guadeloupe&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Martinique&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Montserrat&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Sint Maarten (Dutch part)&quot;</value>
            <value>&quot;St Kitts and Nevis&quot;</value>
            <value>&quot;St Lucia&quot;</value>
            <value>&quot;St Pierre and Miquelon&quot;</value>
            <value>&quot;St Vincent and the Grenadines&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Turks and Caicos Islands&quot;</value>
            <value>&quot;United States of America&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Venezuela, Bolivarian Republic of&quot;</value>
            <value>&quot;Virgin Islands, British&quot;</value>
            <value>&quot;Virgin Islands, United States&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North Africa And The Middle East&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Gaza Strip and West Bank&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Western Sahara&quot;</value>
            <value>&quot;Yemen&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North-East Asia&quot;'>
            <value>&quot;China (excludes SARs and Taiwan)&quot;</value>
            <value>&quot;Hong Kong (SAR of China)&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Korea, Democratic People&apos;s Republic of (North)&quot;</value>
            <value>&quot;Macau (SAR of China)&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Taiwan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North-West Europe&quot;'>
            <value>&quot;Aland Islands&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;England&quot;</value>
            <value>&quot;Faroe Islands&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greenland&quot;</value>
            <value>&quot;Guernsey&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Isle of Man&quot;</value>
            <value>&quot;Jersey&quot;</value>
            <value>&quot;Liechtenstein&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;Northern Ireland&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Scotland&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Wales&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Oceania And Antartica&quot;'>
            <value>&quot;Cook Islands&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;French Guiana&quot;</value>
            <value>&quot;French Polynesia&quot;</value>
            <value>&quot;Guam&quot;</value>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Micronesia, Federated States of&quot;</value>
            <value>&quot;Nauru&quot;</value>
            <value>&quot;New Caledonia&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Niue&quot;</value>
            <value>&quot;Norfolk Island&quot;</value>
            <value>&quot;Northern Mariana Islands&quot;</value>
            <value>&quot;Palau&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Pitcairn Islands&quot;</value>
            <value>&quot;Polynesia (excludes Hawaii), nec&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;Samoa, American&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;Tokelau&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Tuvalu&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
            <value>&quot;Wallis and Futuna&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South-East Asia&quot;'>
            <value>&quot;Brunei Darussalam&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Myanmar, The Republic of the Union of&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southern And Central Asia&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southern And Eastern Europe&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Former Yugoslav Republic of Macedonia (FYROM)&quot;</value>
            <value>&quot;Gibraltar&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russian Federation&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Ukraine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Sub-Saharan Africa&quot;'>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cabo Verde&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo, Democratic Republic of&quot;</value>
            <value>&quot;Congo, Republic of&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Reunion&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;St Helena&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country of birth]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;China (excludes SARs and Taiwan)&quot;' value='China ' />
        </aliases>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Bonaire, Sint Eustatius and Saba&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
          <semantic-value key='&quot;China (excludes SARs and Taiwan)&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Congo, Republic of&quot;' value='&quot;Congo (Brazzaville)&quot;' />
          <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Gaza Strip and West Bank&quot;' value='&quot;Palestinian Territories&quot;' />
          <semantic-value key='&quot;Hong Kong (SAR of China)&quot;' value='&quot;Hong Kong&quot;' />
          <semantic-value key='&quot;Korea, Democratic People&apos;s Republic of (North)&quot;' value='&quot;North Korea&quot;' />
          <semantic-value key='&quot;Myanmar, The Republic of the Union of&quot;' value='&quot;Myanmar&quot;' />
          <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;Ireland&quot;' />
          <semantic-value key='&quot;Polynesia (excludes Hawaii), nec&quot;' value='&quot;French Polynesia&quot;' />
          <semantic-value key='&quot;Samoa, American&quot;' value='&quot;American Samoa&quot;' />
          <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Virgin Islands, United States&quot;' value='&quot;Virgin Islands&quot;' />
          <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
        </semantic-values>
      </column>
      <column caption='North-West Europe' datatype='integer' name='[NORTH-WEST EUROPE]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of  overseas-born]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Australian-born]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Oceania And Antarctica' datatype='integer' name='[OCEANIA AND ANTARCTICA]' role='measure' type='quantitative' />
      <column caption='Southern And Eastern Europe' datatype='integer' name='[SOUTHERN AND EASTERN EUROPE]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year (pop by country of birth!)]' role='dimension' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[% change from previous year Australian]' derivation='Max' name='[max:% change from previous year Australian:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% change from previous year oversea]' derivation='Max' name='[max:% change from previous year oversea:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of Australian born]' derivation='Max' name='[max:% of Australian born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of oversea-born]' derivation='Max' name='[max:% of oversea-born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of  overseas-born]' derivation='Max' name='[max:Number of  overseas-born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Australian-born]' derivation='Max' name='[max:Number of Australian-born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of Australian born]' derivation='None' name='[none:% of Australian born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of oversea-born]' derivation='None' name='[none:% of oversea-born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of  overseas-born]' derivation='None' name='[none:Number of  overseas-born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Australian-born]' derivation='None' name='[none:Number of Australian-born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of  overseas-born]' derivation='Max' name='[pcdf:max:Number of  overseas-born:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of Australian-born]' derivation='Max' name='[pcdf:max:Number of Australian-born:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of  overseas-born]' derivation='Sum' name='[pcdf:sum:Number of  overseas-born:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of Australian-born]' derivation='Sum' name='[pcdf:sum:Number of Australian-born:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[% change from previous year Australian]' derivation='Sum' name='[sum:% change from previous year Australian:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% change from previous year oversea]' derivation='Sum' name='[sum:% change from previous year oversea:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of Australian born]' derivation='Sum' name='[sum:% of Australian born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% of oversea-born]' derivation='Sum' name='[sum:% of oversea-born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of  overseas-born]' derivation='Sum' name='[sum:Number of  overseas-born:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Australian-born]' derivation='Sum' name='[sum:Number of Australian-born:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/namfon_nut/Desktop/Sem 1/COMP6234 - Data Visualisation/Coursework/Report/Week 15/Tableau/pop by country of birth (Dataset).tde' schema='Extract' tablename='Extract' update-time='01/06/2018 09:20:08 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[% change from previous year Australian]' value='[Extract].[% change from previous year Australian]' />
            <map key='[% change from previous year oversea]' value='[Extract].[% change from previous year oversea]' />
            <map key='[% of Australian born]' value='[Extract].[% of Australian born]' />
            <map key='[% of oversea-born]' value='[Extract].[% of oversea-born]' />
            <map key='[% people]' value='[Extract].[% people]' />
            <map key='[AMERICAS]' value='[Extract].[AMERICAS]' />
            <map key='[Continent]' value='[Extract].[Continent]' />
            <map key='[Continent_group]' value='[Extract].[Continent_group]' />
            <map key='[Country of birth]' value='[Extract].[Country of birth]' />
            <map key='[NORTH AFRICA AND THE MIDDLE EAST]' value='[Extract].[NORTH AFRICA AND THE MIDDLE EAST]' />
            <map key='[NORTH-EAST ASIA]' value='[Extract].[NORTH-EAST ASIA]' />
            <map key='[NORTH-WEST EUROPE]' value='[Extract].[NORTH-WEST EUROPE]' />
            <map key='[Number of  overseas-born]' value='[Extract].[Number of  overseas-born]' />
            <map key='[Number of Australian-born]' value='[Extract].[Number of Australian-born]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Number of people]' value='[Extract].[Number of people]' />
            <map key='[OCEANIA AND ANTARCTICA]' value='[Extract].[OCEANIA AND ANTARCTICA]' />
            <map key='[SOUTH-EAST ASIA]' value='[Extract].[SOUTH-EAST ASIA]' />
            <map key='[SOUTHERN AND CENTRAL ASIA]' value='[Extract].[SOUTHERN AND CENTRAL ASIA]' />
            <map key='[SOUTHERN AND EASTERN EUROPE]' value='[Extract].[SOUTHERN AND EASTERN EUROPE]' />
            <map key='[SUB-SAHARAN AFRICA]' value='[Extract].[SUB-SAHARAN AFRICA]' />
            <map key='[Total Population (pop by country of birth!)]' value='[Extract].[Total Population]' />
            <map key='[Total Population]' value='[Extract].[Total Population1]' />
            <map key='[Year (pop by country of birth!)]' value='[Extract].[Year]' />
            <map key='[Year]' value='[Extract].[Year1]' />
          </cols>
          <calculations>
            <calculation column='[Continent_group]' formula='CASE [Country of birth]&#10;  WHEN &quot;Anguilla&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Antigua and Barbuda&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Argentina&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Aruba&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Bahamas&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Barbados&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Belize&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Bermuda&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Bolivia, Plurinational State of&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Bonaire, Sint Eustatius and Saba&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Brazil&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Canada&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Cayman Islands&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Chile&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Colombia&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Costa Rica&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Cuba&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Curacao&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Dominica&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Dominican Republic&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Ecuador&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;El Salvador&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Falkland Islands&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Grenada&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Guadeloupe&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Guatemala&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Guyana&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Haiti&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Honduras&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Jamaica&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Martinique&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Mexico&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Montserrat&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Nicaragua&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Panama&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Paraguay&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Peru&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Puerto Rico&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Sint Maarten (Dutch part)&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;St Kitts and Nevis&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;St Lucia&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;St Pierre and Miquelon&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;St Vincent and the Grenadines&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Suriname&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Trinidad and Tobago&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Turks and Caicos Islands&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;United States of America&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Uruguay&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Venezuela, Bolivarian Republic of&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Virgin Islands, British&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Virgin Islands, United States&quot; THEN &quot;Americas&quot;&#10;  WHEN &quot;Algeria&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Bahrain&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Egypt&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Gaza Strip and West Bank&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Iran&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Iraq&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Israel&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Jordan&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Kuwait&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Lebanon&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Libya&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Morocco&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Oman&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Qatar&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Saudi Arabia&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;South Sudan&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Sudan&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Syria&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Tunisia&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Turkey&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;United Arab Emirates&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Western Sahara&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;Yemen&quot; THEN &quot;North Africa And The Middle East&quot;&#10;  WHEN &quot;China (excludes SARs and Taiwan)&quot; THEN &quot;North-East Asia&quot;&#10;  WHEN &quot;Hong Kong (SAR of China)&quot; THEN &quot;North-East Asia&quot;&#10;  WHEN &quot;Japan&quot; THEN &quot;North-East Asia&quot;&#10;  WHEN &quot;Korea, Democratic People&apos;s Republic of (North)&quot; THEN &quot;North-East Asia&quot;&#10;  WHEN &quot;Macau (SAR of China)&quot; THEN &quot;North-East Asia&quot;&#10;  WHEN &quot;Mongolia&quot; THEN &quot;North-East Asia&quot;&#10;  WHEN &quot;Taiwan&quot; THEN &quot;North-East Asia&quot;&#10;  WHEN &quot;Aland Islands&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Austria&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Belgium&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Denmark&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;England&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Faroe Islands&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Finland&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;France&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Germany&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Greenland&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Guernsey&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Iceland&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Ireland&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Isle of Man&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Jersey&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Liechtenstein&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Luxembourg&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Monaco&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Netherlands&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Northern Ireland&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Norway&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Scotland&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Sweden&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Switzerland&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Wales&quot; THEN &quot;North-West Europe&quot;&#10;  WHEN &quot;Cook Islands&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Fiji&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;French Guiana&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;French Polynesia&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Guam&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Kiribati&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Marshall Islands&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Micronesia, Federated States of&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Nauru&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;New Caledonia&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;New Zealand&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Niue&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Norfolk Island&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Northern Mariana Islands&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Palau&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Papua New Guinea&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Pitcairn Islands&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Polynesia (excludes Hawaii), nec&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Samoa&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Samoa, American&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Solomon Islands&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Tokelau&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Tonga&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Tuvalu&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Vanuatu&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Wallis and Futuna&quot; THEN &quot;Oceania And Antartica&quot;&#10;  WHEN &quot;Brunei Darussalam&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Cambodia&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Indonesia&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Laos&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Malaysia&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Myanmar, The Republic of the Union of&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Philippines&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Singapore&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Thailand&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Timor-Leste&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Vietnam&quot; THEN &quot;South-East Asia&quot;&#10;  WHEN &quot;Afghanistan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Armenia&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Azerbaijan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Bangladesh&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Bhutan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Georgia&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;India&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Kazakhstan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Kyrgyzstan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Maldives&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Nepal&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Pakistan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Sri Lanka&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Tajikistan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Turkmenistan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Uzbekistan&quot; THEN &quot;Southern And Central Asia&quot;&#10;  WHEN &quot;Albania&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Andorra&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Belarus&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Bosnia and Herzegovina&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Bulgaria&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Croatia&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Cyprus&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Czech Republic&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Estonia&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Former Yugoslav Republic of Macedonia (FYROM)&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Gibraltar&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Greece&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Hungary&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Italy&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Kosovo&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Latvia&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Lithuania&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Malta&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Moldova&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Montenegro&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Poland&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Portugal&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Romania&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Russian Federation&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;San Marino&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Serbia&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Slovakia&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Slovenia&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Spain&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Ukraine&quot; THEN &quot;Southern And Eastern Europe&quot;&#10;  WHEN &quot;Angola&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Benin&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Botswana&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Burkina Faso&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Burundi&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Cabo Verde&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Cameroon&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Central African Republic&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Chad&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Comoros&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Congo, Democratic Republic of&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Congo, Republic of&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Cote d&apos;Ivoire&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Djibouti&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Equatorial Guinea&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Eritrea&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Ethiopia&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Gabon&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Gambia&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Ghana&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Guinea&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Guinea-Bissau&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Kenya&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Lesotho&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Liberia&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Madagascar&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Malawi&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Mali&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Mauritania&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Mauritius&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Mozambique&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Namibia&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Niger&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Nigeria&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Reunion&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Rwanda&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Sao Tome and Principe&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Senegal&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Seychelles&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Sierra Leone&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Somalia&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;South Africa&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;St Helena&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Swaziland&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Tanzania&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Togo&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Uganda&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Zambia&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  WHEN &quot;Zimbabwe&quot; THEN &quot;Sub-Saharan Africa&quot;&#10;  ELSE [Country of birth]&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6000' timestamp-start='2018-01-06 21:20:08.315' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>% change from previous year Australian</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% change from previous year Australian]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% change from previous year Australian</remote-alias>
              <ordinal>0</ordinal>
              <family>Total </family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6017.8651697632686</statistic>
                <statistic aggregation='Avg' datatype='real'>1.002977528293878</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1.2241260388852089</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.25335946715838686</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.25333835298966328</statistic>
                <statistic aggregation='Var' datatype='real'>0.064191019598781707</statistic>
                <statistic aggregation='VarP' datatype='real'>0.064180321095515247</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6420.8654601480739</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% change from previous year oversea</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% change from previous year oversea]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% change from previous year oversea</remote-alias>
              <ordinal>1</ordinal>
              <family>Total </family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>12972.728488088522</statistic>
                <statistic aggregation='Avg' datatype='real'>2.1621214146814203</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4.6749152056561414</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.2071835323663371</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.2070829295466809</statistic>
                <statistic aggregation='Var' datatype='real'>1.4572920808164671</statistic>
                <statistic aggregation='VarP' datatype='real'>1.4570491988029977</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>36790.909263761903</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of Australian born</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of Australian born]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of Australian born</remote-alias>
              <ordinal>2</ordinal>
              <family>Total </family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>450902.36560225283</statistic>
                <statistic aggregation='Avg' datatype='real'>75.150394267042145</statistic>
                <statistic aggregation='Min' datatype='real'>71.513224100971684</statistic>
                <statistic aggregation='Max' datatype='real'>77.041268778639378</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9522169329076717</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9520542413841668</statistic>
                <statistic aggregation='Var' datatype='real'>3.8111509531314369</statistic>
                <statistic aggregation='VarP' datatype='real'>3.8105157613059149</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>33908353.645519115</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of oversea-born</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of oversea-born]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% of oversea-born</remote-alias>
              <ordinal>3</ordinal>
              <family>Total </family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>149097.63439773483</statistic>
                <statistic aggregation='Avg' datatype='real'>24.849605732955805</statistic>
                <statistic aggregation='Min' datatype='real'>22.958731221360626</statistic>
                <statistic aggregation='Max' datatype='real'>28.486775899028316</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9522169328448609</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9520542413213611</statistic>
                <statistic aggregation='Var' datatype='real'>3.8111509528861958</statistic>
                <statistic aggregation='VarP' datatype='real'>3.8105157610607145</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3727880.5250664642</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% people</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% people]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% people</remote-alias>
              <ordinal>4</ordinal>
              <family>pop by country of birth_</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3777</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2459.871472201713</statistic>
                <statistic aggregation='Avg' datatype='real'>0.40997857870028548</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>77.041268778639378</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.8493444055821291</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.8489402767089258</statistic>
                <statistic aggregation='Var' datatype='real'>23.516141163950692</statistic>
                <statistic aggregation='VarP' datatype='real'>23.512221807090032</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>142081.82545249883</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AMERICAS</remote-name>
              <remote-type>3</remote-type>
              <local-name>[AMERICAS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AMERICAS</remote-alias>
              <ordinal>5</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1279149600.0</statistic>
                <statistic aggregation='Avg' datatype='real'>213191.60000000001</statistic>
                <statistic aggregation='Min' datatype='integer'>161080</statistic>
                <statistic aggregation='Max' datatype='integer'>305120</statistic>
                <statistic aggregation='Stdev' datatype='real'>47422.42123488948</statistic>
                <statistic aggregation='StdevP' datatype='real'>47418.469201778331</statistic>
                <statistic aggregation='Var' datatype='real'>2248886035.7792964</statistic>
                <statistic aggregation='VarP' datatype='real'>2248511221.4400001</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>286195017192000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>6</ordinal>
              <family>pop by country of birth_</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Americas&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sub-Saharan Africa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country of birth</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country of birth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country of birth</remote-alias>
              <ordinal>7</ordinal>
              <family>pop by country of birth_</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>239</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NORTH AFRICA AND THE MIDDLE EAST</remote-name>
              <remote-type>3</remote-type>
              <local-name>[NORTH AFRICA AND THE MIDDLE EAST]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NORTH AFRICA AND THE MIDDLE EAST</remote-alias>
              <ordinal>8</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1719914400.0</statistic>
                <statistic aggregation='Avg' datatype='real'>286652.40000000002</statistic>
                <statistic aggregation='Min' datatype='integer'>202830</statistic>
                <statistic aggregation='Max' datatype='integer'>410310</statistic>
                <statistic aggregation='Stdev' datatype='real'>67509.985468296873</statistic>
                <statistic aggregation='StdevP' datatype='real'>67504.3594017453</statistic>
                <statistic aggregation='Var' datatype='real'>4557598137.9296551</statistic>
                <statistic aggregation='VarP' datatype='real'>4556838538.2399998</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>272280</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>520358621784000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NORTH-EAST ASIA</remote-name>
              <remote-type>3</remote-type>
              <local-name>[NORTH-EAST ASIA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NORTH-EAST ASIA</remote-alias>
              <ordinal>9</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2626360800.0</statistic>
                <statistic aggregation='Avg' datatype='real'>437726.79999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>137650</statistic>
                <statistic aggregation='Max' datatype='integer'>852940</statistic>
                <statistic aggregation='Stdev' datatype='real'>208504.38958889962</statistic>
                <statistic aggregation='StdevP' datatype='real'>208487.01349906667</statistic>
                <statistic aggregation='Var' datatype='real'>43474080477.839638</statistic>
                <statistic aggregation='VarP' datatype='real'>43466834797.760002</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>390520</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1410429517416000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NORTH-WEST EUROPE</remote-name>
              <remote-type>3</remote-type>
              <local-name>[NORTH-WEST EUROPE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NORTH-WEST EUROPE</remote-alias>
              <ordinal>10</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9235276800.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1539212.8</statistic>
                <statistic aggregation='Min' datatype='integer'>1472360</statistic>
                <statistic aggregation='Max' datatype='integer'>1642000</statistic>
                <statistic aggregation='Stdev' datatype='real'>54386.242942466743</statistic>
                <statistic aggregation='StdevP' datatype='real'>54381.710566698006</statistic>
                <statistic aggregation='Var' datatype='real'>2957863421.3970132</statistic>
                <statistic aggregation='VarP' datatype='real'>2957370444.1601138</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>14232800484768000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of  overseas-born</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Number of  overseas-born]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of  overseas-born</remote-alias>
              <ordinal>11</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>30555237600.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5092539.5999999996</statistic>
                <statistic aggregation='Min' datatype='integer'>4033280</statistic>
                <statistic aggregation='Max' datatype='integer'>6873050</statistic>
                <statistic aggregation='Stdev' datatype='real'>919481.67502382025</statistic>
                <statistic aggregation='StdevP' datatype='real'>919405.04835799092</statistic>
                <statistic aggregation='Var' datatype='real'>845446550704.61023</statistic>
                <statistic aggregation='VarP' datatype='real'>845305642946.15955</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>4752950</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.6067559132308592e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Australian-born</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Number of Australian-born]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Australian-born</remote-alias>
              <ordinal>12</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>91469032800.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15244838.800000001</statistic>
                <statistic aggregation='Min' datatype='integer'>13445360</statistic>
                <statistic aggregation='Max' datatype='integer'>17254110</statistic>
                <statistic aggregation='Stdev' datatype='real'>1134110.1018987014</statistic>
                <statistic aggregation='StdevP' datatype='real'>1134015.5887853329</statistic>
                <statistic aggregation='Var' datatype='real'>1286205723228.6831</statistic>
                <statistic aggregation='VarP' datatype='real'>1285991355608.145</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>15179770</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.4021466083615616e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>13</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of people</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Number of people]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of people</remote-alias>
              <ordinal>14</ordinal>
              <family>pop by country of birth_</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2106</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>501320070.0</statistic>
                <statistic aggregation='Avg' datatype='real'>83553.345000000001</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>17254110</statistic>
                <statistic aggregation='Stdev' datatype='real'>986238.96180335397</statistic>
                <statistic aggregation='StdevP' datatype='real'>986156.77179847739</statistic>
                <statistic aggregation='Var' datatype='real'>972667289778.9574</statistic>
                <statistic aggregation='VarP' datatype='real'>972505178563.99426</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5876918040148100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OCEANIA AND ANTARCTICA</remote-name>
              <remote-type>3</remote-type>
              <local-name>[OCEANIA AND ANTARCTICA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OCEANIA AND ANTARCTICA</remote-alias>
              <ordinal>15</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>94790736000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>15798456.0</statistic>
                <statistic aggregation='Min' datatype='integer'>13819040</statistic>
                <statistic aggregation='Max' datatype='integer'>18027060</statistic>
                <statistic aggregation='Stdev' datatype='real'>1267757.2976724689</statistic>
                <statistic aggregation='StdevP' datatype='real'>1267651.6468286945</statistic>
                <statistic aggregation='Var' datatype='real'>1607208565801.8013</statistic>
                <statistic aggregation='VarP' datatype='real'>1606940697707.501</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>15710930</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.5071889160898611e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SOUTH-EAST ASIA</remote-name>
              <remote-type>3</remote-type>
              <local-name>[SOUTH-EAST ASIA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SOUTH-EAST ASIA</remote-alias>
              <ordinal>16</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3842798400.0</statistic>
                <statistic aggregation='Avg' datatype='real'>640466.40000000002</statistic>
                <statistic aggregation='Min' datatype='integer'>418750</statistic>
                <statistic aggregation='Max' datatype='integer'>973090</statistic>
                <statistic aggregation='Stdev' datatype='real'>164146.850890139</statistic>
                <statistic aggregation='StdevP' datatype='real'>164133.1714158963</statistic>
                <statistic aggregation='Var' datatype='real'>26944188657.149525</statistic>
                <statistic aggregation='VarP' datatype='real'>26939697959.040001</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>591610</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2622821444928000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SOUTHERN AND CENTRAL ASIA</remote-name>
              <remote-type>3</remote-type>
              <local-name>[SOUTHERN AND CENTRAL ASIA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SOUTHERN AND CENTRAL ASIA</remote-alias>
              <ordinal>17</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2107584000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>351264.0</statistic>
                <statistic aggregation='Min' datatype='integer'>112270</statistic>
                <statistic aggregation='Max' datatype='integer'>803220</statistic>
                <statistic aggregation='Stdev' datatype='real'>220817.04198348999</statistic>
                <statistic aggregation='StdevP' datatype='real'>220798.63979653499</statistic>
                <statistic aggregation='Var' datatype='real'>48760166030.338387</statistic>
                <statistic aggregation='VarP' datatype='real'>48752039336.0</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>254070</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1032830622192000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SOUTHERN AND EASTERN EUROPE</remote-name>
              <remote-type>3</remote-type>
              <local-name>[SOUTHERN AND EASTERN EUROPE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SOUTHERN AND EASTERN EUROPE</remote-alias>
              <ordinal>18</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5007259200.0</statistic>
                <statistic aggregation='Avg' datatype='real'>834543.19999999995</statistic>
                <statistic aggregation='Min' datatype='integer'>788790</statistic>
                <statistic aggregation='Max' datatype='integer'>883950</statistic>
                <statistic aggregation='Stdev' datatype='real'>26056.66847639246</statistic>
                <statistic aggregation='StdevP' datatype='real'>26054.496996870676</statistic>
                <statistic aggregation='Var' datatype='real'>678949972.0886246</statistic>
                <statistic aggregation='VarP' datatype='real'>678836813.75994313</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4182847136880000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUB-SAHARAN AFRICA</remote-name>
              <remote-type>3</remote-type>
              <local-name>[SUB-SAHARAN AFRICA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUB-SAHARAN AFRICA</remote-alias>
              <ordinal>19</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1271824800.0</statistic>
                <statistic aggregation='Avg' datatype='real'>211970.79999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>108290</statistic>
                <statistic aggregation='Max' datatype='integer'>354570</statistic>
                <statistic aggregation='Stdev' datatype='real'>85696.393307989725</statistic>
                <statistic aggregation='StdevP' datatype='real'>85689.251644299002</statistic>
                <statistic aggregation='Var' datatype='real'>7343871825.9976664</statistic>
                <statistic aggregation='VarP' datatype='real'>7342647847.3599997</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>193560</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>313645607400000.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Total Population (pop by country of birth!)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Population</remote-alias>
              <ordinal>20</ordinal>
              <family>pop by country of birth_</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>122024270400.0</statistic>
                <statistic aggregation='Avg' datatype='real'>20337378.399999999</statistic>
                <statistic aggregation='Min' datatype='integer'>17478640</statistic>
                <statistic aggregation='Max' datatype='integer'>24127160</statistic>
                <statistic aggregation='Stdev' datatype='real'>2041466.6325986818</statistic>
                <statistic aggregation='StdevP' datatype='real'>2041296.5032902821</statistic>
                <statistic aggregation='Var' datatype='real'>4167586012013.8018</statistic>
                <statistic aggregation='VarP' datatype='real'>4166891414345.1328</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>19932720</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.5066551095947904e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Population1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Total Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Population1</remote-alias>
              <ordinal>21</ordinal>
              <family>Total </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>122024270400.0</statistic>
                <statistic aggregation='Avg' datatype='real'>20337378.399999999</statistic>
                <statistic aggregation='Min' datatype='integer'>17478640</statistic>
                <statistic aggregation='Max' datatype='integer'>24127160</statistic>
                <statistic aggregation='Stdev' datatype='real'>2041466.6325986818</statistic>
                <statistic aggregation='StdevP' datatype='real'>2041296.5032902821</statistic>
                <statistic aggregation='Var' datatype='real'>4167586012013.8018</statistic>
                <statistic aggregation='VarP' datatype='real'>4166891414345.1328</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='integer'>19932720</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.5066551095947904e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year (pop by country of birth!)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>22</ordinal>
              <family>pop by country of birth_</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1992-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='date'>#2004-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year1</remote-alias>
              <ordinal>23</ordinal>
              <family>Total </family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1992-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='date'>#2004-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Continent_group</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Americas&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sub-Saharan Africa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6000</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Oceania And Antartica&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.27656' measure-ordering='alphabetic' measure-percentage='0.72344' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:\% change from previous year Australian:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:Number of Australian-born:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:\% change from previous year Australian:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:\% of Australian born:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:\% of Australian born:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:\% of Australian born:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Number of  overseas-born:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of  overseas-born:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:\% of oversea-born:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:Number of  overseas-born:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:\% of oversea-born:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:sum:Number of  overseas-born:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:\% of oversea-born:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Number of Australian-born:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of Australian-born:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:\% change from previous year oversea:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:\% change from previous year oversea:qk]&quot;</bucket>
            </map>
            <map to='#f3e1ce'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of Australian-born:qk]&quot;</bucket>
            </map>
            <map to='#f3e1ce'>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:sum:Number of Australian-born:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Migrant countries (Dataset)' inline='true' name='federated.1j0ax7b1ku6c0n18427tn1vat9pj' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Dataset' name='excel-direct.1x6f2ai031f2x10zugubi16smyzi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/namfon_nut/Desktop/Sem 1/COMP6234 - Data Visualisation/Coursework/Report/Week 15/Born oversea/Dataset.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1x6f2ai031f2x10zugubi16smyzi' name='Net Migrants world ' table='[&apos;Net Migrants world $&apos;]' type='table'>
          <columns gridOrigin='A1:O233:no:A1:O233:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Net International migrant 1990' ordinal='1' />
            <column datatype='integer' name='Net International migrant 1995' ordinal='2' />
            <column datatype='integer' name='Net International migrant 2000' ordinal='3' />
            <column datatype='integer' name='Net International migrant 2005' ordinal='4' />
            <column datatype='integer' name='Net International migrant 2010' ordinal='5' />
            <column datatype='integer' name='Net International migrant 2015' ordinal='6' />
            <column datatype='integer' name='Net International migrant 2017' ordinal='7' />
            <column datatype='real' name='% of total pop 1990' ordinal='8' />
            <column datatype='real' name='% of total pop 1995' ordinal='9' />
            <column datatype='real' name='% of total pop 2000' ordinal='10' />
            <column datatype='real' name='% of total pop 2005' ordinal='11' />
            <column datatype='real' name='% of total pop 2010' ordinal='12' />
            <column datatype='real' name='% of total pop 2015' ordinal='13' />
            <column datatype='real' name='% of total pop 2017' ordinal='14' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net International migrant 1990</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net International migrant 1990]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>Net International migrant 1990</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net International migrant 1995</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net International migrant 1995]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>Net International migrant 1995</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net International migrant 2000</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net International migrant 2000]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>Net International migrant 2000</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net International migrant 2005</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net International migrant 2005]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>Net International migrant 2005</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net International migrant 2010</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net International migrant 2010]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>Net International migrant 2010</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net International migrant 2015</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net International migrant 2015]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>Net International migrant 2015</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net International migrant 2017</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net International migrant 2017]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>Net International migrant 2017</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of total pop 1990</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of total pop 1990]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>% of total pop 1990</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of total pop 1995</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of total pop 1995]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>% of total pop 1995</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of total pop 2000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of total pop 2000]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>% of total pop 2000</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of total pop 2005</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of total pop 2005]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>% of total pop 2005</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of total pop 2010</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of total pop 2010]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>% of total pop 2010</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of total pop 2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of total pop 2015]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>% of total pop 2015</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of total pop 2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of total pop 2017]</local-name>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias>% of total pop 2017</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Net Migrants world ]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O233:no:A1:O233:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highlight_color' datatype='string' name='[Calculation_901845847386316800]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Country] = &quot;Australia&quot; THEN &quot;RED&quot; END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Calculation_901845847386316800]' derivation='None' name='[none:Calculation_901845847386316800:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/namfon_nut/Desktop/Sem 1/COMP6234 - Data Visualisation/Coursework/Report/Week 15/Tableau/Migrant countries (Dataset).tde' schema='Extract' tablename='Extract' update-time='01/06/2018 09:18:22 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_901845847386316800]' formula='IF [Country] = &quot;Australia&quot; THEN &quot;RED&quot; END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='232' timestamp-start='2018-01-06 21:18:22.164' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>Net Migrants world </family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>232</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>232</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Lesotho&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net International migrant 1990</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Net International migrant 1990]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net International migrant 1990</remote-alias>
              <ordinal>1</ordinal>
              <family>Net Migrants world </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>230</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>152542373.0</statistic>
                <statistic aggregation='Avg' datatype='real'>666123.89956331882</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23251026</statistic>
                <statistic aggregation='Stdev' datatype='real'>2032552.1481834704</statistic>
                <statistic aggregation='StdevP' datatype='real'>2028109.4059352286</statistic>
                <statistic aggregation='Var' datatype='real'>4131268235085.2397</statistic>
                <statistic aggregation='VarP' datatype='real'>4113227762442.9458</statistic>
                <statistic aggregation='Count' datatype='integer'>229</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1043541277950837.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net International migrant 1995</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Net International migrant 1995]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net International migrant 1995</remote-alias>
              <ordinal>2</ordinal>
              <family>Net Migrants world </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>230</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>160700028.0</statistic>
                <statistic aggregation='Avg' datatype='real'>701746.84716157208</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>28451053</statistic>
                <statistic aggregation='Stdev' datatype='real'>2293788.0940512815</statistic>
                <statistic aggregation='StdevP' datatype='real'>2288774.3435883168</statistic>
                <statistic aggregation='Var' datatype='real'>5261463820411.4111</statistic>
                <statistic aggregation='VarP' datatype='real'>5238487995868.1299</statistic>
                <statistic aggregation='Count' datatype='integer'>229</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1312384489041578.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net International migrant 2000</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Net International migrant 2000]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net International migrant 2000</remote-alias>
              <ordinal>3</ordinal>
              <family>Net Migrants world </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>230</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>172604257.0</statistic>
                <statistic aggregation='Avg' datatype='real'>753730.37991266372</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>34814053</statistic>
                <statistic aggregation='Stdev' datatype='real'>2667976.4252616558</statistic>
                <statistic aggregation='StdevP' datatype='real'>2662144.7758289878</statistic>
                <statistic aggregation='Var' datatype='real'>7118098205751.9648</statistic>
                <statistic aggregation='VarP' datatype='real'>7087014807473.5723</statistic>
                <statistic aggregation='Count' datatype='integer'>229</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1753023463114601.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net International migrant 2005</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Net International migrant 2005]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net International migrant 2005</remote-alias>
              <ordinal>4</ordinal>
              <family>Net Migrants world </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>231</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>190531600.0</statistic>
                <statistic aggregation='Avg' datatype='real'>828398.26086956519</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>39258293</statistic>
                <statistic aggregation='Stdev' datatype='real'>2952984.127021696</statistic>
                <statistic aggregation='StdevP' datatype='real'>2946557.6033496372</statistic>
                <statistic aggregation='Var' datatype='real'>8720115254442.0889</statistic>
                <statistic aggregation='VarP' datatype='real'>8682201709857.5586</statistic>
                <statistic aggregation='Count' datatype='integer'>230</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2154742439347934.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net International migrant 2010</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Net International migrant 2010]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net International migrant 2010</remote-alias>
              <ordinal>5</ordinal>
              <family>Net Migrants world </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>220019266.0</statistic>
                <statistic aggregation='Avg' datatype='real'>948358.9051724138</statistic>
                <statistic aggregation='Min' datatype='integer'>154</statistic>
                <statistic aggregation='Max' datatype='integer'>44183643</statistic>
                <statistic aggregation='Stdev' datatype='real'>3318856.6782343308</statistic>
                <statistic aggregation='StdevP' datatype='real'>3311696.2455599764</statistic>
                <statistic aggregation='Var' datatype='real'>11014809650660.615</statistic>
                <statistic aggregation='VarP' datatype='real'>10967332022856.043</statistic>
                <statistic aggregation='Count' datatype='integer'>232</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2753078259523200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net International migrant 2015</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Net International migrant 2015]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net International migrant 2015</remote-alias>
              <ordinal>6</ordinal>
              <family>Net Migrants world </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>247585744.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1067179.9310344828</statistic>
                <statistic aggregation='Min' datatype='integer'>141</statistic>
                <statistic aggregation='Max' datatype='integer'>48178877</statistic>
                <statistic aggregation='Stdev' datatype='real'>3619669.1121860016</statistic>
                <statistic aggregation='StdevP' datatype='real'>3611859.6767405891</statistic>
                <statistic aggregation='Var' datatype='real'>13102004481713.396</statistic>
                <statistic aggregation='VarP' datatype='real'>13045530324464.633</statistic>
                <statistic aggregation='Count' datatype='integer'>232</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3290781572482836.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net International migrant 2017</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Net International migrant 2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net International migrant 2017</remote-alias>
              <ordinal>7</ordinal>
              <family>Net Migrants world </family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>232</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>257715425.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1110842.3491379311</statistic>
                <statistic aggregation='Min' datatype='integer'>143</statistic>
                <statistic aggregation='Max' datatype='integer'>49776970</statistic>
                <statistic aggregation='Stdev' datatype='real'>3766999.8719437271</statistic>
                <statistic aggregation='StdevP' datatype='real'>3758872.570411169</statistic>
                <statistic aggregation='Var' datatype='real'>14190288035224.057</statistic>
                <statistic aggregation='VarP' datatype='real'>14129123000589.469</statistic>
                <statistic aggregation='Count' datatype='integer'>232</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3564237744252837.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>8</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>232.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>232</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>232.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_901845847386316800</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_901845847386316800]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_901845847386316800</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;RED&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;RED&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.290051' measure-ordering='alphabetic' measure-percentage='0.709949' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_901845847386316800:nk]' type='palette'>
            <map to='#7f7f7f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;RED&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Visa (Dataset)' inline='true' name='federated.0nrdf1j0mh0p2c1a97bst12pr3ew' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Dataset' name='excel-direct.07al2xo03z0gec12wdk7a1mznwt1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/namfon_nut/Desktop/Sem 1/COMP6234 - Data Visualisation/Coursework/Report/Week 15/Born oversea/Dataset.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07al2xo03z0gec12wdk7a1mznwt1' name='Visa' table='[Visa$]' type='table'>
          <columns gridOrigin='A1:G1345:no:A1:G1345:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='Major grouping and visa' ordinal='2' />
            <column datatype='string' name='Major grouping and visa desc' ordinal='3' />
            <column datatype='integer' name='NOM arrival' ordinal='4' />
            <column datatype='integer' name='NOM departure' ordinal='5' />
            <column datatype='integer' name='NOM' ordinal='6' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Visa]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G1345:no:A1:G1345:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Visa]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Visa]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major grouping and visa</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Major grouping and visa]</local-name>
            <parent-name>[Visa]</parent-name>
            <remote-alias>Major grouping and visa</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major grouping and visa desc</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Major grouping and visa desc]</local-name>
            <parent-name>[Visa]</parent-name>
            <remote-alias>Major grouping and visa desc</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOM arrival</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NOM arrival]</local-name>
            <parent-name>[Visa]</parent-name>
            <remote-alias>NOM arrival</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOM departure</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NOM departure]</local-name>
            <parent-name>[Visa]</parent-name>
            <remote-alias>NOM departure</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOM</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NOM]</local-name>
            <parent-name>[Visa]</parent-name>
            <remote-alias>NOM</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Description' datatype='string' name='[Major grouping and visa desc]' role='dimension' type='nominal' />
      <column datatype='string' name='[Major grouping and visa]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;New Zealand Citizen (subclass 444)&quot;' value='New Zealand Citizen' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Highest]' derivation='InOut' name='[io:Highest:nk]' pivot='key' type='nominal' />
      <column-instance column='[Major grouping and visa]' derivation='None' name='[none:Major grouping and visa:nk]' pivot='key' type='nominal' />
      <group name='[Highest]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='union'>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[Major grouping and visa]' member='&quot;Permanent visas&quot;' />
              <groupfilter function='member' level='[Major grouping and visa desc]' member='&quot;Skill&quot;' />
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[Major grouping and visa]' member='&quot;Temporary visas&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Major grouping and visa desc]' member='&quot;Higher education sector&quot;' />
                <groupfilter function='member' level='[Major grouping and visa desc]' member='&quot;Visitor&quot;' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[Major grouping and visa desc]' />
            <hierarchy name='[Major grouping and visa]' />
          </order>
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/namfon_nut/Desktop/Sem 1/COMP6234 - Data Visualisation/Coursework/Report/Week 15/Tableau/Visa (Dataset).tde' schema='Extract' tablename='Extract' update-time='01/07/2018 02:31:18 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1344' timestamp-start='2018-01-07 02:31:18.687' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Major grouping and visa desc</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Major grouping and visa desc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Major grouping and visa desc</remote-alias>
              <ordinal>0</ordinal>
              <family>Visa</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Australian Citizen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Working Holiday&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1344</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Major grouping and visa</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Major grouping and visa]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Major grouping and visa</remote-alias>
              <ordinal>1</ordinal>
              <family>Visa</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Australian Citizen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Temporary visas&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1344</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NOM arrival</remote-name>
              <remote-type>2</remote-type>
              <local-name>[NOM arrival]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NOM arrival</remote-alias>
              <ordinal>2</ordinal>
              <family>Visa</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>663</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5404320.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4021.0714285714284</statistic>
                <statistic aggregation='Min' datatype='integer'>10</statistic>
                <statistic aggregation='Max' datatype='integer'>31860</statistic>
                <statistic aggregation='Stdev' datatype='real'>5520.1997342342429</statistic>
                <statistic aggregation='StdevP' datatype='real'>5518.1457063550461</statistic>
                <statistic aggregation='Var' datatype='real'>30472605.105839804</statistic>
                <statistic aggregation='VarP' datatype='real'>30449932.036564626</statistic>
                <statistic aggregation='Count' datatype='integer'>1344</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>62655865400.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NOM departure</remote-name>
              <remote-type>3</remote-type>
              <local-name>[NOM departure]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NOM departure</remote-alias>
              <ordinal>3</ordinal>
              <family>Visa</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>482</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2923020.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2174.8660714285716</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>36570</statistic>
                <statistic aggregation='Stdev' datatype='real'>4354.4642300883615</statistic>
                <statistic aggregation='StdevP' datatype='real'>4352.843964272236</statistic>
                <statistic aggregation='Var' datatype='real'>18961358.731119029</statistic>
                <statistic aggregation='VarP' datatype='real'>18947250.577301234</statistic>
                <statistic aggregation='Count' datatype='integer'>1344</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>31822281800.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NOM</remote-name>
              <remote-type>2</remote-type>
              <local-name>[NOM]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NOM</remote-alias>
              <ordinal>4</ordinal>
              <family>Visa</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>622</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2483270.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1847.671130952381</statistic>
                <statistic aggregation='Min' datatype='integer'>-12430</statistic>
                <statistic aggregation='Max' datatype='integer'>23830</statistic>
                <statistic aggregation='Stdev' datatype='real'>3790.481240519221</statistic>
                <statistic aggregation='StdevP' datatype='real'>3789.0708288460137</statistic>
                <statistic aggregation='Var' datatype='real'>14367748.034728132</statistic>
                <statistic aggregation='VarP' datatype='real'>14357057.746011816</statistic>
                <statistic aggregation='Count' datatype='integer'>1344</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>23884151900.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1344.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1344</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1344.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>6</ordinal>
              <family>Visa</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Australian Capital Territory&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Australia&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1344</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>7</ordinal>
              <family>Visa</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2004-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>1344</statistic>
                <statistic aggregation='Median' datatype='date'>#2010-01-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.368897' group-percentage='0.148282' measure-ordering='alphabetic' measure-percentage='0.482821' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Major grouping and visa:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Permanent visas&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Australian Citizen&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;New Zealand Citizen (subclass 444)&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Temporary visas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Highest:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Country of birth Australian born oversea'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Light' fontsize='10'>Number of International Migrants by Country of Birth, 1992 - 2016 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pop by country of birth (Dataset)' name='federated.09pwp2w0g4yec61fvdby505fhl6x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09pwp2w0g4yec61fvdby505fhl6x'>
            <column datatype='string' name='[Continent_group]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country of birth]' new-bin='true'>
                <bin default-name='false' value='&quot;Americas&quot;'>
                  <value>&quot;Anguilla&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bolivia, Plurinational State of&quot;</value>
                  <value>&quot;Bonaire, Sint Eustatius and Saba&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Falkland Islands&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Montserrat&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;St Kitts and Nevis&quot;</value>
                  <value>&quot;St Lucia&quot;</value>
                  <value>&quot;St Pierre and Miquelon&quot;</value>
                  <value>&quot;St Vincent and the Grenadines&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;United States of America&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela, Bolivarian Republic of&quot;</value>
                  <value>&quot;Virgin Islands, British&quot;</value>
                  <value>&quot;Virgin Islands, United States&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Africa And The Middle East&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Gaza Strip and West Bank&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North-East Asia&quot;'>
                  <value>&quot;China (excludes SARs and Taiwan)&quot;</value>
                  <value>&quot;Hong Kong (SAR of China)&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Democratic People&apos;s Republic of (North)&quot;</value>
                  <value>&quot;Macau (SAR of China)&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North-West Europe&quot;'>
                  <value>&quot;Aland Islands&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;England&quot;</value>
                  <value>&quot;Faroe Islands&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Guernsey&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Jersey&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Northern Ireland&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Scotland&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Wales&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania And Antartica&quot;'>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Micronesia, Federated States of&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Norfolk Island&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Pitcairn Islands&quot;</value>
                  <value>&quot;Polynesia (excludes Hawaii), nec&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Samoa, American&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South-East Asia&quot;'>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar, The Republic of the Union of&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern And Central Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southern And Eastern Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Former Yugoslav Republic of Macedonia (FYROM)&quot;</value>
                  <value>&quot;Gibraltar&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Sub-Saharan Africa&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cabo Verde&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo, Democratic Republic of&quot;</value>
                  <value>&quot;Congo, Republic of&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Reunion&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;St Helena&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country of birth]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;China (excludes SARs and Taiwan)&quot;' value='China ' />
              </aliases>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Bonaire, Sint Eustatius and Saba&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;China (excludes SARs and Taiwan)&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Congo, Republic of&quot;' value='&quot;Congo (Brazzaville)&quot;' />
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Gaza Strip and West Bank&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Hong Kong (SAR of China)&quot;' value='&quot;Hong Kong&quot;' />
                <semantic-value key='&quot;Korea, Democratic People&apos;s Republic of (North)&quot;' value='&quot;North Korea&quot;' />
                <semantic-value key='&quot;Myanmar, The Republic of the Union of&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;Ireland&quot;' />
                <semantic-value key='&quot;Polynesia (excludes Hawaii), nec&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;Samoa, American&quot;' value='&quot;American Samoa&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Virgin Islands, United States&quot;' value='&quot;Virgin Islands&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Number of people]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country of birth]' derivation='None' name='[none:Country of birth:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of people]' derivation='Sum' name='[sum:Number of people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country of birth:nk]' to='&quot;Aruba&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none:Country of birth:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' included-values='all' />
          <filter class='categorical' column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]' filter-group='4'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]</column>
            <column>[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]</column>
            <column>[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[Longitude (generated)]' field-type='quantitative' max='39022331.479188614' min='-13047295.768894812' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[Latitude (generated)]' field-type='quantitative' max='21097170.295190781' min='-14607716.960637853' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' max='1500000' min='120000' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' value='' />
            <format attr='display-alternate-text' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' value='Number of people' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]' value='Year ' />
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' />
              <text column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[Continent_group]' />
              <lod column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[Continent_group]' />
              <geometry column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#555555' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='183' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09pwp2w0g4yec61fvdby505fhl6x].[Latitude (generated)]</rows>
        <cols>[federated.09pwp2w0g4yec61fvdby505fhl6x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Internation migrant worldwide'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Top 10 International countries migrants destination, 2017</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migrant countries (Dataset)' name='federated.1j0ax7b1ku6c0n18427tn1vat9pj' />
          </datasources>
          <datasource-dependencies datasource='federated.1j0ax7b1ku6c0n18427tn1vat9pj'>
            <column caption='Highlight_color' datatype='string' name='[Calculation_901845847386316800]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Country] = &quot;Australia&quot; THEN &quot;RED&quot; END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Net International migrant 2015]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Net International migrant 2017]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_901845847386316800]' derivation='None' name='[none:Calculation_901845847386316800:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Net International migrant 2015]' derivation='Sum' name='[sum:Net International migrant 2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net International migrant 2017]' derivation='Sum' name='[sum:Net International migrant 2017:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Net International migrant 2015])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]' direction='DESC' using='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[sum:Net International migrant 2015:qk]' />
          <slices>
            <column>[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' data-class='subtotal' scope='rows' value='7' />
            <format attr='font-size' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]' value='8' />
            <format attr='font-size' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[sum:Net International migrant 2015:qk]' value='8' />
            <format attr='color' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]' value='#e15759' />
            <format attr='font-size' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]' value='196' />
            <format attr='background-color' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]' value='#898989' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='9' />
            <format attr='font-size' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]' value='8' />
            <format attr='color' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]' value='#e15759' />
            <format attr='font-weight' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]' value='bold' />
            <format attr='font-size' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]' value='9' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[sum:Net International migrant 2015:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[sum:Net International migrant 2015:qk]' max='50000000' min='500000' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' value='#c0c0c0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]' />
              <text column='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[sum:Net International migrant 2017:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Major group'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Visa (Dataset)' name='federated.0nrdf1j0mh0p2c1a97bst12pr3ew' />
          </datasources>
          <datasource-dependencies datasource='federated.0nrdf1j0mh0p2c1a97bst12pr3ew'>
            <column datatype='string' name='[Major grouping and visa]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;New Zealand Citizen (subclass 444)&quot;' value='New Zealand Citizen' />
              </aliases>
            </column>
            <column datatype='integer' name='[NOM]' role='measure' type='quantitative' />
            <column-instance column='[Major grouping and visa]' derivation='None' name='[none:Major grouping and visa:nk]' pivot='key' type='nominal' />
            <column-instance column='[NOM]' derivation='Sum' name='[pcto:sum:NOM:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[NOM]' derivation='Sum' name='[sum:NOM:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Permanent visas&quot;</bucket>
              <bucket>&quot;Temporary visas&quot;</bucket>
              <bucket>&quot;New Zealand Citizen (subclass 444)&quot;</bucket>
              <bucket>&quot;Australian Citizen&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='175' />
            <format attr='height' value='303' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_8' value='#00000000' />
            <format attr='fill-color' id='annotation_7' value='#00000000' />
            <format attr='line-end' id='annotation_7' value='none' />
            <format attr='line-end' id='annotation_8' value='none' />
            <format attr='stroke-color' id='annotation_8' value='#555555' />
            <format attr='stroke-color' id='annotation_7' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]' />
              <wedge-size column='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[pcto:sum:NOM:qk]' />
              <size column='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Major grouping and visa:&#9;</run>
                <run bold='true'>&lt;[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of people:&#9;</run>
                <run bold='true'>&lt;[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[pcto:sum:NOM:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1534254550933838' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='141'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontsize='7'>Permanent Visas </run>
              <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='7'> 34.54%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.605714'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.452145'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-2' y='-92' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='0' text-width='135'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontsize='7'>Temporary visas </run>
              <run bold='true' fontalignment='0' fontcolor='#e15759' fontsize='7'>60.94%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.445714'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.594059'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-4' y='81' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Major group and Visa'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Number of migrants by major groups and visas, 2004-2015</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Visa (Dataset)' name='federated.0nrdf1j0mh0p2c1a97bst12pr3ew' />
          </datasources>
          <datasource-dependencies datasource='federated.0nrdf1j0mh0p2c1a97bst12pr3ew'>
            <column caption='Description' datatype='string' name='[Major grouping and visa desc]' role='dimension' type='nominal' />
            <column datatype='string' name='[Major grouping and visa]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;New Zealand Citizen (subclass 444)&quot;' value='New Zealand Citizen' />
              </aliases>
            </column>
            <column datatype='integer' name='[NOM]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Highest]' derivation='InOut' name='[io:Highest:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major grouping and visa desc]' derivation='None' name='[none:Major grouping and visa desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major grouping and visa]' derivation='None' name='[none:Major grouping and visa:nk]' pivot='key' type='nominal' />
            <column-instance column='[NOM]' derivation='Sum' name='[sum:NOM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk]' direction='DESC' using='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]' />
          <filter class='categorical' column='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[yr:Year:ok]'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2014' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]' scope='cols' value='Number of people' />
            <format attr='subtitle' class='0' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]' scope='cols' value='true' />
            <format attr='height' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]' value='51' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk]' value='19' />
            <format attr='font-size' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]' value='8' />
            <format attr='font-size' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk]' value='8' />
            <format attr='vertical-align' value='top' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]' value='136' />
            <format attr='width' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk]' value='224' />
            <format attr='height-header' value='20' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]' value='7' />
            <format attr='font-size' field='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[io:Highest:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Major grouping and visa:&#9;</run>
                <run bold='true'>&lt;[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Description:&#9;</run>
                <run bold='true'>&lt;[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of people:&#9;</run>
                <run bold='true'>&lt;[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='size' value='1.2523757219314575' />
                <format attr='mark-transparency' value='203' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk] / [federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk])</rows>
        <cols>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 15 country of birth'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Light' fontsize='10'>Top 15 countries of birth excluding Australia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pop by country of birth (Dataset)' name='federated.09pwp2w0g4yec61fvdby505fhl6x' />
          </datasources>
          <datasource-dependencies datasource='federated.09pwp2w0g4yec61fvdby505fhl6x'>
            <column datatype='real' name='[% people]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country of birth]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;China (excludes SARs and Taiwan)&quot;' value='China ' />
              </aliases>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Bonaire, Sint Eustatius and Saba&quot;' value='&quot;Bonaire, Saint Eustatius and Saba&quot;' />
                <semantic-value key='&quot;China (excludes SARs and Taiwan)&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Congo, Republic of&quot;' value='&quot;Congo (Brazzaville)&quot;' />
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Gaza Strip and West Bank&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;Hong Kong (SAR of China)&quot;' value='&quot;Hong Kong&quot;' />
                <semantic-value key='&quot;Korea, Democratic People&apos;s Republic of (North)&quot;' value='&quot;North Korea&quot;' />
                <semantic-value key='&quot;Myanmar, The Republic of the Union of&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;Ireland&quot;' />
                <semantic-value key='&quot;Polynesia (excludes Hawaii), nec&quot;' value='&quot;French Polynesia&quot;' />
                <semantic-value key='&quot;Samoa, American&quot;' value='&quot;American Samoa&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Virgin Islands, United States&quot;' value='&quot;Virgin Islands&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Number of people]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[% people]' derivation='Max' name='[max:% people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country of birth]' derivation='None' name='[none:Country of birth:nk]' pivot='key' type='nominal' />
            <column-instance column='[% people]' derivation='Sum' name='[sum:% people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of people]' derivation='Sum' name='[sum:Number of people:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of people])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country of birth:nk]' to='&quot;Aruba&quot;' />
                  <groupfilter from='&quot;Austria&quot;' function='range' level='[none:Country of birth:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]' direction='DESC' using='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' />
          <filter class='categorical' column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]' filter-group='4'>
            <groupfilter function='member' level='[yr:Year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]</column>
            <column>[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' scope='cols' value='Number of people' />
            <format attr='height' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' value='51' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]' value='20' />
            <format attr='font-size' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]' value='7' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]' value='108' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' value='8' />
            <format attr='font-weight' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' value='bold' />
            <format attr='font-size' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]' value='7' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-size' id='refline0' value='8' />
            <format attr='text-format' id='refline0' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:% people:qk]' />
              <tooltip column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:% people:qk]' />
            </encodings>
            <reference-line axis-column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country of birth:&#9;</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of people:&#9;</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Percentage from population :&#9;</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:% people:qk]&gt; %</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:% people:qk]</run>
                <run>&gt; %</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='7' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='size' value='1.3733149766921997' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]</rows>
        <cols>[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total oversea-born and Australian'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Percentage change of Australian VS Migrants, 1992 - 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pop by country of birth (Dataset)' name='federated.09pwp2w0g4yec61fvdby505fhl6x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09pwp2w0g4yec61fvdby505fhl6x'>
            <column datatype='real' name='[% of Australian born]' role='measure' type='quantitative' />
            <column caption='% Of Oversea-Born' datatype='real' name='[% of oversea-born]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of  overseas-born]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Australian-born]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[% of Australian born]' derivation='Max' name='[max:% of Australian born:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% of oversea-born]' derivation='Max' name='[max:% of oversea-born:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of  overseas-born]' derivation='Max' name='[max:Number of  overseas-born:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Australian-born]' derivation='Max' name='[max:Number of Australian-born:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of  overseas-born]' derivation='Max' name='[pcdf:max:Number of  overseas-born:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Number of Australian-born]' derivation='Max' name='[pcdf:max:Number of Australian-born:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]&quot;</bucket>
              <bucket>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of Australian-born:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]' scope='rows' value='% Difference in Number of people' />
            <format attr='subtitle' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of Australian-born:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of Australian-born:qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]' value='51' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]' value='8' />
            <format attr='font-size' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]' value='8' />
            <format attr='font-weight' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]' value='bold' />
            <format attr='font-weight' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]' value='bold' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='7' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='7' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]' value='' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_6' value='#00000000' />
            <format attr='fill-color' id='annotation_11' value='#00000000' />
            <format attr='line-end' id='annotation_5' value='arrow' />
            <format attr='line-end' id='annotation_6' value='arrow' />
            <format attr='line-end' id='annotation_11' value='arrow' />
            <format attr='line-end-size' id='annotation_11' value='smaller' />
            <format attr='line-end-size' id='annotation_6' value='smaller' />
            <format attr='line-end-size' id='annotation_5' value='smaller' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]' />
              <tooltip column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:Number of  overseas-born:qk]' />
              <tooltip column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:% of oversea-born:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year :&#9;</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of migrants :</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:Number of  overseas-born:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Number of migrants from previous year:&#9;</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of migrants: </run>
                <run bold='true' fontcolor='#e15759'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:% of oversea-born:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of Australian-born:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]' />
              <tooltip column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:Number of Australian-born:qk]' />
              <tooltip column='[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:% of Australian born:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Australian:&#9;</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:Number of Australian-born:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Difference in Number of Australian from the Previous year:&#9;</run>
                <run bold='true'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of Australian-born:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Australian: </run>
                <run bold='true' fontcolor='#e15759'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:% of Australian born:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='size' value='0.31784531474113464' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk] + [federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of Australian-born:qk])</rows>
        <cols>[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='139'>
            <formatted-text>
              <run fontalignment='0' fontsize='7'>Year :</run>
              <run bold='true' fontalignment='0' fontsize='7'>1996</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontsize='7'>First migration from England</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#1995-12-22 19:29:43.652#'>
                  <node-reference>
                    <axis>[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.021031036575662101'>
                  <node-reference>
                    <axis>[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-37' y='-53' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='119'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878' fontsize='7'>Year : </run>
              <run bold='true' fontalignment='0' fontsize='7'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]&gt;</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878' fontsize='7'>% Of Migrants: </run>
              <run bold='true' fontalignment='0' fontcolor='#c05b4a' fontsize='7'>&lt;[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:% of oversea-born:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:% of oversea-born:qk]</field>
                      <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[max:Number of  overseas-born:qk]</field>
                      <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]</field>
                      <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]</field>
                      <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>28.486775899028316</value>
                    <value>6873050</value>
                    <value>#2016-01-01 00:00:00#</value>
                    <value>0.024217127086642802</value>
                    <value>&quot;[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-11' y='-57' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='0' text-width='121'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878' fontsize='7'>Year : </run>
              <run bold='true' fontalignment='0' fontsize='7'>2016</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#787878' fontsize='7'>% Of Australian: </run>
              <run bold='true' fontalignment='0' fontsize='7'>Æ </run>
              <run bold='true' fontalignment='0' fontcolor='#c05b4a' fontsize='7'>71.513</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2016-02-28 12:51:24.969#'>
                  <node-reference>
                    <axis>[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.010247104281278303'>
                  <node-reference>
                    <axis>[federated.09pwp2w0g4yec61fvdby505fhl6x].[pcdf:max:Number of  overseas-born:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-20' y='-39' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='350' maxwidth='950' minheight='350' minwidth='950' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='95428' id='5' param='horz' type='layout-flow' w='98316' x='842' y='2286'>
            <zone h='95428' id='3' type='layout-basic' w='98316' x='842' y='2286'>
              <zone h='95428' id='1' name='Internation migrant worldwide' w='32472' x='842' y='2286'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='95428' id='8' name='Total oversea-born and Australian' w='62526' x='36632' y='2286'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='95428' id='10' param='horz' type='layout-flow' w='3318' x='33314' y='2286' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13714' id='9' name='Total oversea-born and Australian' pane-specification-id='1' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]' show-title='false' type='color' w='16000' x='37263' y='83143'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 11'>
      <style />
      <size maxheight='700' maxwidth='1024' minheight='700' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='pop by country of birth (Dataset)' name='federated.09pwp2w0g4yec61fvdby505fhl6x' />
      </datasources>
      <datasource-dependencies datasource='federated.09pwp2w0g4yec61fvdby505fhl6x'>
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97714' id='13' param='horz' type='layout-flow' w='44649' x='54570' y='1143'>
            <zone h='97714' id='5' param='horz' type='layout-flow' w='44649' x='54570' y='1143'>
              <zone h='97714' id='3' type='layout-basic' w='44649' x='54570' y='1143'>
                <zone h='47144' id='10' name='Top 15 country of birth' w='44649' x='54570' y='51713'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50570' id='11' name='Total oversea-born and Australian' w='44649' x='54570' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='97714' id='7' name='Country of birth Australian born oversea' w='53789' x='781' y='1143'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13467' id='8' mode='slider' name='Country of birth Australian born oversea' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]' show-all='false' type='filter' w='48308' x='1000' y='73867'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='12143' id='9' name='Country of birth Australian born oversea' pane-specification-id='1' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' type='color' w='28906' x='14063' y='12143'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='11143' id='14' leg-item-layout='vert' leg-item-order='normal' name='Total oversea-born and Australian' pane-specification-id='1' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]' type='color' w='10742' x='54980' y='41286'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='480' maxwidth='1000' minheight='480' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='pop by country of birth (Dataset)' name='federated.09pwp2w0g4yec61fvdby505fhl6x' />
      </datasources>
      <datasource-dependencies datasource='federated.09pwp2w0g4yec61fvdby505fhl6x'>
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='96666' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1667'>
            <zone h='96666' id='3' type='layout-basic' w='98400' x='800' y='1667'>
              <zone h='96666' id='1' name='Country of birth Australian born oversea' w='56900' x='800' y='1667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='96666' id='8' name='Top 15 country of birth' w='41500' x='57700' y='1667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='19792' id='6' mode='slider' name='Country of birth Australian born oversea' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]' show-all='false' type='filter' w='56100' x='900' y='80417'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='13800' id='7' name='Country of birth Australian born oversea' pane-specification-id='1' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' type='color' w='31400' x='20200' y='9400'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='405' maxwidth='850' minheight='405' minwidth='850' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='96050' id='5' param='horz' type='layout-flow' w='98118' x='941' y='1975'>
            <zone h='96050' id='3' type='layout-basic' w='98118' x='941' y='1975'>
              <zone h='88148' id='1' name='Major group' w='21883' x='941' y='9877'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='96050' id='9' name='Major group and Visa' w='76235' x='22824' y='1975'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7902' id='10' type='empty' w='21883' x='941' y='1975'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='Internation migrant worldwide'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Calculation_901845847386316800:nk]</field>
            <field>[federated.1j0ax7b1ku6c0n18427tn1vat9pj].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Total oversea-born and Australian'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='126'>
            <card pane-specification-id='1' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Country of birth Australian born oversea'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='198'>
            <card mode='slider' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]' show-all='false' type='filter' />
            <card pane-specification-id='1' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[Continent_group]</field>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]</field>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Year (pop by country of birth!):qk]</field>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Year:qk]</field>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[sum:Number of people:qk]</field>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Top 15 country of birth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.09pwp2w0g4yec61fvdby505fhl6x].[yr:Year:ok]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[none:Country of birth:nk]</field>
            <field>[federated.09pwp2w0g4yec61fvdby505fhl6x].[tyr:Year (pop by country of birth!):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Major group and Visa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='114'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[io:Highest:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[io:Highest:nk]</field>
            <field>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk]</field>
            <field>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]</field>
            <field>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Year:qk]</field>
            <field>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Major group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[sum:NOM:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa desc:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Internation migrant worldwide'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Total oversea-born and Australian'>
          <zoom type='entire-view' />
          <highlight field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Country of birth Australian born oversea'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Top 15 country of birth' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Major group'>
          <highlight>
            <color-one-way>
              <field>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[none:Major grouping and visa:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Major group and Visa'>
          <highlight>
            <color-one-way>
              <field>[federated.0nrdf1j0mh0p2c1a97bst12pr3ew].[io:Highest:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 11'>
      <viewpoints>
        <viewpoint name='Country of birth Australian born oversea'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Top 15 country of birth' />
        <viewpoint name='Total oversea-born and Australian'>
          <zoom type='entire-view' />
          <highlight field='[federated.09pwp2w0g4yec61fvdby505fhl6x].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country of birth Australian born oversea' width='192'>
      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
      ffekvXZ4vV78Pf2ktbUsFvY+yMq9EA88kTpCkk+7aZpkZqfweTxo+QK+ljWPV9M0Gbt1q+zF
      y9kj7iV0XSeRSJBIJMhms2Vu4LI7i2wCrsS4TNMsTe5q4lAul+NXL73E6JUrxJqa1hkEapoA
      jFwW92rZTwF7Th558sicZC6ZYmRxhZW6Jppidy9AZqvo372HsURynanW3l55kmiL5Uu5aZqo
      uQwKMJfK0N6z5hOjqio9vb1lrhBbdXm+G7Asi1QqVQq+F7/Jn+2wm4Kd/uSVzQlNTU088tRT
      BENBx9QuNacDyCjoOooHFMm8JVuBZO4pjufyecZMF5H+vQx3d9/TskpOUBQFxetz3ECCcouQ
      ZVnohQKqr3zfxuVyUfAFMC2LFdXNLlv1mgcBdhcPJ8Vf/K+0jyPuI6/wpmmW7PyVzL0NjY00
      NDY6HqtpArDyOjh4cMpWIDGpxJJ/VbM48vTx+zrp7bD8a1FQcrtlccCyLJLZHLe8IQ49+WjZ
      9Yqi0H/kKDeuXaPv4YMPVN8E7Lvudgg5faNNTLt52LIs8vk8hULhtpwYa1YEyufzuLTsugGT
      IW+Mlc7xbD5R1L1CtK2D9KpCJyaKbP2B1VSMhkFHT5+j9SNaV8/eh49S3/Bgmj/txCz/Lv7b
      lV3LssqcHuU/KGcWt5sIrWYJYCWRIKKUW4BkUUcMtjyAy9kcLZJ8/KCgp3+AaTwUVrmj3aHP
      MAwsYFn1ELuPeTTvFHKEl5MI5KSbCGbgZAnaihu8kwUIapgAtFwWr5R/R1EUCqbFbKKoFNkV
      4JvzC1w3VDrusa/PZuByuWgd3s98KuPo2aooCpPLSToOH7ttz9MHAVt1u5dDXO17K3aC2ciq
      ZV9RS23aUoseIBimua7xblUhFimaBy3LQnW50AsFDNNkNK1x4pnPPXDij0BjUxNTbh/2SARF
      UVjKaviH9hK9i5t19wMulwu3202hUFhH6C6Xq7T/IeR62X4vdAcnTq8oypaJS6BmCSCvaYRs
      FQaBkl/N5OIyPk8xE8KpG+M89qWv3rNSqrcDRVFA4lB6oYAFTK6kiA4fpP0++CrdbchOfUK+
      h2JMsVjZRB99Ph+pVKqUalKGXTEOBoO3PTY1SwArszO0e4uDZrf9A6zkNDTDIux2cfCp48Sa
      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
      LJYKd+9q+P/zfITPPeSPiAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Internation migrant worldwide' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOydd3Rc1bW4vzu9qI1GvVu9WMWy3Ds2GAymlxBCCuEl7+XllwTSIITEIaTx
      khgIHRIwtqkGDBg7Nu5V1bJ6771rep/7+0MCd0c2TgLRfGtpLa1776lz9ql7ny2Ioijiw8c0
      RfLvzoAPH/9OfALgY1rjEwAf0xqfAPiY1vgEwMe0xicAPqY1PgHwMa3xCYCPaY1PAHxMa3wC
      4GNa4xMAH9ManwD4mNb4BMDHtMYnAD6mNT4B8DGt8QmAj2mNTwB8TGt8AuBjWiM710O73Y7Z
      bP5X58WHj3855xQAQRCQSqX/6rz48PEvR/AZxfuYzvjWAD6mNT4B8DGtOeca4PJip3bfx3Qr
      0lmyKAX1pUbjMlJx5ADuGSuZHa+5nBn81yI6aSraQ2FDP/IZ8/nS0ox/U0Zc9FQcobRLy/Lr
      5hD4b8iB6DLRUteASRpOelbsZNsQsQx1UtfSjc0N+ugUkuLDUJ6jqx7vraeuZQj3Gc+VoUnM
      meFPc2M9/eP2094FxGSSk6BHEMBlG5/6CGBu2s/vHtlA16dP7FR9+Cy/eX43F94vctBwaAd7
      ilqwAQMN+/j1E5sYt7qmmvQELgOlO7dQ2GY57bHotlG28xUeeeDH/PCHD/D7ZzZR2WMEYKz0
      NX79xC6GL6l8/xysTXt56pXdSGNnkp0Qetb70Y5j/OH73+YHv9zEgPefmRM3vVWH2P734xj/
      mcmcB1H0MtLZSFNHEzUVHdgARC/m7hr2HqlGGhxFbIyeruP7KazpxOU9e6mq8g8lNiGBhMm/
      +PhoJOZeuocsIFOiD48++S42CtdwF30GKwBel4GyAwemPgK4LSO0NHdPZHQiCsyDnTR3BuMG
      xttOUD/uR6S/mdqGHhQhiSzIT0UjV5N33V3E+acQMNbKa7sPUFo0wI5oP/zD4lhckE2gwkV7
      fSV17SMo9fHMnZ2Bv0KK6PUw3FlDVUM3Lo+FrhErIaflykXX3ud4fIeUBx96hLQgLx0nDtE+
      ZmXY3cHBvUcoORHEjG1OogKTmLskFU9vKydqWzDb3WhCEsjJSUft7Obwx/spKe0jdJueCPQs
      unY+Olx0VJZS2z2GPCiGOXNyCFQIOC3D1FdW0jViQ64NJj03j7jg08c2Y18TJ6qbMHkUxKfn
      kRoXgm2ogYPb99Ix7GWWdYDekVCy4k4vUUfRXkwRqShaj3Cs6RZuTFMDbgabKmi0+hPuGaK5
      30RoYjapIU6Ol9ZhlQVTsHA2YRo5XreN1spSmvoMaCNSyZ2ZRKASRjvqqDH4MTdOwYkTVYTm
      riR+3hruzgwmfLJBGvtbqKxpxuxVMyMzl+QILSMdDdS2dGFxgV9oEgvmpKIUhKk2m/PisQ5T
      0zxCWmYixUWuTxoZdXVdRM1ayKx4HQBhGinbD1QzmhRBuEZxWhwqfz0x/vqTrcE6RL1TSU5a
      NEgVBIdFETz5zmHspFIIJG9GOAIuesoLGQ2ddfnWAD3Fb/OHJ//G0aYRsPSy5YXHOdBmAawU
      v/sSWw4045TIUCrkSKQyVCoVKqUCCS7qD77FC+8VI5W5qdrxKq/sqsMNWLoLefzPL1PdZ0Mu
      Aaf7zMHOSWtNI5roTGJD1UjlWhLnXM0VM0ORyuQoFTIkUvlkWjIE7DQUFdNj8aJQQOGbT/Hq
      xxU4kaFUypFIpChVKlQqJRLctB56ixfeLcEpF2jeu4lXPizD7IHqHX/lrx+V45XKsA/WUN4y
      flquvMYGXn32ZSoGXIjmbjY/9zxFrcNIJLKJPEkmy684s/8Z43hZB9EFV7Eo2UtFaR32yXK2
      HNzCky+8QeOIE7exluce/T2b91SDxEH5h6/wyu4mwEvjng28/FEFLpmM41uf4429NTg8bjpL
      t/P8Owc4+NZ6fvHLdRT2TMT513eKsAL2kRpe+stfqeqzIXEMUtPUgc1koLqinBGHgMw9yPa/
      rue98tHL0Fo89DUcx6XPICb4lOms240FGcHakw1dowshUuag13jmb382xu5aLOoEIoPVnC6i
      XoaaKxFD0gn1V4DDQPOASFpS2OVcA8iISprFqtUrCLGn0H38MG29DkiVn/wkMI6Fs9PZXitj
      8bIVhPorcZj6+HBbIQV3/Yyr8mNZnijwvT++Q83iGXRuehVn+pf4+t3L8Xd007p/G47T0tQw
      74Zb2PKbLTz9ooGVc7OInxFPiL8aXXQ6c7JjebMjikWrVhEJgEjB9V+iQCJBAKKEZp74uBzx
      yq8za3Y6QQdg3qpVpAKekQae33KM3G8/wvWZwRiz1Kx79F2a5mXS1dCCdsbtLF91BX5SEe9p
      /YiN0nc3UR+whD98+Wo0Xhta42/Y9F4hi390LbNnJRFYYWf+qlUknFGDjrZCyoYDuTs7iwT1
      LN5/5yDd1+aSHDTxPihjEdesXI7dEMaB/c+QkTOfZelaFJ1FbOgaBIOLN98pZ94Pn2RtqoKu
      EAu/3byDtYtnAGBu20uRbDF/2Pgg2TFQXPRJyi5ObN1If/TVPPzlFfhLRLwiSASB5TfchSCR
      IOAmdOQ4L+6r4Nr8K/C/1GYierH213KiX8fS1TEoTKd0HjIFOomD5u5+IoNmoJQJuD2gVlkZ
      G/dAxPmj9doHOFE1TMaKxWhkpzd/t6mDE80S8tYmopCAy2plxGVDUXX0MgiARPhU2gRBikQi
      QUBAIsBUDhg87mH6u7rpe3cDrXtVYO9n3DDK6Pgo3d1O4hekESAVJuM/M7SAOnElDz+oo7S8
      liMfbmaLM4g1d3+NZSkhZ6UFYOqtYcfOA/SO2xnpqcIoW3LO7+wWMyNjg/S++zwd2+W4HaO0
      mUyYLDYyFy/m6HvbeXx9Hem587hi6Sz06klB95rp6RohOCUOrUQAiYLI2DhGarr/QU04aCwp
      wxFVQHq4BIV0LsHjL9HWN0pSkPaU+hUAAUEQJupamDi4BBHPyDBthjGMbz1Jgwrs471098oY
      c3sAUGlTuPO73yBJJwOsp9YKre0jBM6Jxl8qICAgFUD0OBmoL2H34eMMGO2MNrYjpn22YyOP
      w0x1bTdxM+cTKD3jB5VrSMmdyXhZFbu7G5HIJai1WuzjLtQXPJd1M9xSz1hAKkuCpaf3/qKT
      7vomxNhUotQTbdXr9eJxOfGLTJ+6AEikUhDNWC0iaAUQvbhcHtSR4ZfeGwCCIEcRFMasK29g
      ccrEfO4rUjlBeicNgojD7sDL+fZrRUQRwpJmsyZpFnZjH7s2PMGGrYUs+/F1Z33tGSrnicde
      JvK6e7h5dShdZSKvHjl/eeXyYPLW3MzSiIkSflWmJFgXhCLpDn6WtZrBvib2vruZXzWO8uf/
      d/VEZQoyVCo5bqdzIt+iF4fdhkx+4X0Wr6mPI2VtGPo6+NX9hYgeJ33DfRytbGdVetaU6lIi
      l6NRBbPwujuYHzbRYu6RqggNUFELKKLTSNSd6yeXoVHJcDuceET4pAMdaT/Mk09vZ96dX2VF
      op7mD1p5w3KO4BfBaHc1XUYFs6ROBgcHwWTE4TAzOjiMSheMRh/PwmVhWG0OvAhIpXaqRsbw
      Dzy/BLitBuraTaTPykNxxjunyUBDv5OZC6L4JAaFUolWGYAuXD/1NYB/dAqJgf0c2FeH2eXF
      3N9Mcb2J2TmJF7WQUKkD0DrH6DU58Xg8yJXhZMepKK/rJig8isjwIGwjHYzZwpg1N4qGkiN0
      G5xYxocYGDWeMao4aS89QkXbIA4PSKUSPC4P/v4T80qNPgTR3M/YuBOv241jfIg+o5qZBVnE
      hGoY6er9dFGv9A9ELYwzMGDD63ajCI4gO1lOVWkPKn0EkaE6zGMDmKxOGkoOMuBRk5g5h3kz
      ozEPDp6cmgn+5C7OZ/zEPmoHrTgMfRwtbmLWnNwL1stYbxs1o2H8fP3jPL5+PU888Tg///Zy
      movLz5j2nR8hLJl50W6qqnpQ68MJD9ZiHBjEMjkCIMC5l68B5C8tYLhkL7UDZlyWIVq7BjCN
      9mCShZGVnkqwwkHf0GfXDxO9MgL8vLTUVlJRUUFFXQcGYx91FbUMWdwgCMhVGgJ1OnS6IGR2
      I6PyQGIDzmzaJzH0tzIu0xOrP7srNtikuLSxhAed3KQQNAHEaRw0dRunPgIIujS+/j9f57XN
      L/LQHpAq/EldeAc3FkzMrqVyNRqVfKKCBQkKtRZRNjFcy1Ua1EoZAhA8YxY3zynjhd/+HG3S
      fL7/tetZc/c9mF9/j4d++DFydSAZcxdz7QwFOWu+Rt7TT/H7h8pJy8tC1OpQnja/k6JS2tjy
      8no2Wu14BQWhCfl86/o5APhlrGV14q95+qEfEZexhnv+aw5r5x7krz//Cdvj0kiPCkenViII
      Auq4udx+ZSmb1/2Y9wPz+P7vvsGar/8P5r9tZN0DH6DSBJE8ewU3RKXgNXWz5dm9DBlsoAzn
      jjuv4ORSTkZkwU3c1buZzY89hN0jITrnWu5clQUICFIFWo14Vqcx0FGNGJ1OnFo5WeEyYpOy
      0L33dxosAlKFGo048XMJggS1RoNMOlG/E+/koIxg7b3f5vWNb/GrB95E6RdKyqxl3JYRj1Sh
      QqM6tRFNhlMrEIDouTdza/9bvPWnh3HIgsi78lauy1nE7PCneeLXDxKXOZcYtT+ayd/xUglL
      ncuVqac8GK9ixGhg0ZWLCQYMPS10WqUkRIUhOMcpKa4mJGkBAQopiF56TuylxpHAkvnJqAHR
      a6Wlro3wtNX4K87uiqVqB3EZaahPbTdSDan5GbTuP+bTBfLxb8baRWGFjewFqWgBr8NAfcUJ
      mntH8Eq1pOXPJzU6ECngtXax44NC4pZfR3bERI/uNXdTXGUgc24WAeeYJdkHaiE8E9W5kh7t
      9AmAjy8KHobqyqi2h7B4ViLyfxxgSvgEwMcXBBGvd2I7ZGIn7PLgEwAf0xqfNqiPaY1PAHxM
      a3wC4GNa4xMAH9ManwD4mNZM3R7ANEh9axc254SVhkKrIzouFr1WeQ4ltUvE1s2G3z/C0fCv
      8Px3ln6mqNzWMVpa2zDaJtUAkKGPSiAuWjelQo82HeE3T2/n3nUPkRF0eSzQTINt9Nv8mBEb
      ikwCHus4G3/zTcoT7ufxexddvnr8PCOKeJxWhvr7qK8sYjhoLrcsTjlZdtGL1ThCd0czFcUN
      ZN72NbICz18xXoeJ+hMl1HUM4HQLqENimTN3NlFBKgRxjL2vbqFfPqFMiCKYgiULSQkPAI+T
      saG+qQuAueUQv//1m2SsvoEErYeB1gZG/PL4/n/fSJj6Mh1LyALJX3UzEdoZnzkqW3c5f173
      OJFX3kGKH4CCeGUIMdG6KYUXvR4cDifnMES6ZJoObWBjcw6P/OBm/JUgyFXMXv0VYgLjL18i
      n3dcNtrrK+g0CWgDQ1FITzd7c4x2U17bhlSrRe+nvHD9e+10nCiiwx3JyrVLCVCCaXQMUTEp
      MPYx3OpUvnz7sjMCuhlsq6Wux3xx6tByVSgrbrmLhXoRY8sxfvPb5znQuorbghp56InXWfmd
      x7kiAdpKXuOVvTLu/97NKIyNvLbhNap7zUgVQSy57ZusmRPNQMVONr75MYM20IZmcsNXbqYg
      zEF90T66M5JZDYw2HWLj6zvpHDfjVehYev1XuG5+IoMlb/LEjhHWLA3l6J4S+t16br/3v1iY
      rOf0MxJ/ltz0ZVaGnXwoel10VOxj67b9tI+5iZ61iq/fcgUhGinG3jq2bNxIdb8TlUpK96St
      oOi20Vj4EW9sK2TcAblXfZWbV85EOt7G889tZN6tt9H50UsUqq/mT9/I58j2d/m4tAGTw01Q
      /BK+9a2bcJe+wlNvF9NtqednvYeIm72ar69dSN2xw/TnpbIyJxqnsZttr22msLEPURvOFTfe
      zRV5Mdg6S3nybztYsGoWtQeO0jToYsXdP+CGuTHIvmijhkxJdEouMXIVlq5yRgZPfy0PCCd3
      dhhqtZfavs4LRuUcH6B2TMa8JakEqSeacmDISTNT98gIY0H6c4SUEhSdwtxY5aXaAwho/APR
      yO0YzF7wszHQ34fFOZkxm4HBYRle0Ub5zrcpMmfxpz/dgcoyQH2XCy8Wdr32GhTcx+9uysHU
      3oZBLYDXjXGkn2HzhP6jIPVn1T0/Ji3Kn/qPn+GxzW9TMPM+vDYjPR3NuCNu4P5f3cD76/6b
      vx+rZXbikn+gNw624Vpe/utHzPrmT/nvBBsbHvsjmyOT+P4iFe8++2da4u7iwe8twdO8h1/+
      ZTfgZaRqJ0+8Xcu3f/YoWapOHn3wT+wI/jlXxzoZGWzn6DvPUzcQwPzrIhG9AiGZS/nRdd9E
      6+rkhXW/ZNPuHO6/4V6+O9x92gjgto5hGO5n1OQA5xj7Nj1NifRKHvjdMhx1O/j9C0/h96MH
      yHTZGOxsoF+8iW/+dDWtWx7lyW37WZj3FSKVl/YL/tuQSFFpJqYk59KslsiV+MmBU4xvz4fR
      MIQgU2LobqB1zIQbGaExSSRE6ZBLBAxjY5hHBzl61ITCL5ik5CSCNDIEBBTqiTxc1CJYFL04
      rBYs5nGOfLyVFmEmC5MuND8WkCuVeIy99AyZcCmCycyMRYkUpUJgbKCHEaONgLgZJIYEnaVl
      GJSQTXKIAofNRmB4ChrXCEbPxJxeoUtiVmYMKpmSyGg9DoeTs8+0h3ll3f3cd9993PeTdbxz
      tBVjSwnt8kRSowJwK0LJnxlCbXEVw901FHaouPK6JYSqZcgVauRSADsNFVVIomeR6OfBIYtm
      TqKCyvo2nF7A1E6rYgHr1j3IN1dnI/PTk56ahFJ04pSGkRijYnxohH90BYBjpJujxy0suaaA
      YKWMsLRF5AUbKKqfNKTRRJGfm4SfUkFkdAQut51PtJynKy6XiYG2dvpNXoLDIwgJkNFwbB/H
      24YRRRH/hNlcuSCLyIhQZLYe9u85SM+447R2clEjgNPSxRvr1/Fq+wkMYVfy84f/h4wQ9blF
      GQAVBdffw92S93ntyUexeZTMXfNV1ixO5Yb/fQDJux/y1B8OIQ2IYdXNd7DstKmwg4YD77J5
      RzluuRyXaYi28Yu9vCOEr6/782lToP7dW+lqKuaF9YNoJkeLzJnhOC29uEU9YaFnVInowWaz
      01vyAb//beHkwzAy8yeNKfwzuP22K4kLmehRzIN1vL/pbapH7AgIDLX0E7LqH+fU43Jidwho
      1BN9kkQiw1+rpNN2kbdnTCMEQUF4UhazZ+WgkgKIhKo8fFTXzNzEEBT+euImjebFhDjUhbup
      bOoluuDkGvOiBEDpF8/XHnyU+J6PWPeHXdS29JEd6YdcKkUpOc9gogpl2a33svh6C/0ntvDw
      i5tJn/lLssIyuPM76dxsHGTHq3/k7W1lLPvf7JPhbJ1s37KD+Dse4+5FYZibD/PLxz+82Do6
      C0VYBPFxuXzrhz8iI/Tk4t3ZugelZJCBQS+ZUaeURVCgCw4kODOXn//qztPuNTL11oEgnDaM
      dpTv5NhgKD994B5igpQceObb7JxCvpRaP3QBDnr7nBAKbpeN7kEzUQv94B9cPDNd0Wh02GxD
      eNwekEoBAZVKjct9do8sSKT4BWjxGk43rr/4NYBESXTuDTzwPSfrn34M0ftDbimIITssgKrC
      fUQbNZQdPsE4BeAycnjXR7R5QkmP02Oo70afko1e28tbf/4AZW420f5e+sYkJGVHn56OMpDY
      CB0V1cWc0ETScvgjWqdywc8/wD9pJcvCH2Xz62+zdlEqonGAdmMI162dw9qCj9n63AsIa+di
      qy+mbxxAycylq0kpf4WnNwazJD0E22A7Fl0m8+POjj8gNAappZLqynK6nL3sKB1CsnDiXWTa
      HBSHjrLvWCRJsXEkhJ6cPkr1SXzpjkU8vWUToeZ5OBv30xu2jO/kzoCB/s9e8P8Q7OODjHvU
      hOr98Q+JJJomKjoHmZ0YgVx00N3Tjz44EtwWOjr7UQSGE6H3w2UZpa3TgD719IvIpOvWrVs3
      pZQlMvz0UaSlJuIvl6CLSiItLhCTRSA6KZPM5AiMfZ0Y3FoKli4kOTKOpMQYIiP02Ee6aevo
      xa5N5pbbryHWL5DwCCWDXa30DBgIy1nJ2mUzUctlyNUBxCamEhcaSnxKDNaBLoZMbrIXXkVO
      aiTJSQlolUoCw2JJSYhEDkjlSkJjk0gID+QTO2tBkKLVhZOSnkKQ/OQUSCrXkpaThcY6REvX
      AHZJMHMWziJM6098ZgYa+yB9Q0aisxYwMz2GlKQEAnTR5GUnYe1tpad/GGnIDGblpBOkUaD2
      1zEjOYlA1cRo4q+LIjrIS2f3ILLwmSwtSCZ6Rhrx4f4E6KKIC5XT0d6NSxFEXFQYWj8/YpPT
      idUHoItPZ4afjbaWDly6NG68aQ3xOsVE76ULJSkpAY1MiiCV4x8SS2p8OMov2CXeLquR6uL9
      VNS10NbWTk/fECODPbR0GwmJ0mPtaaS45DgNTS20dXQzMDpGX3sLQ24/YvUCFR9vo8EZTmJM
      IDKZCr1eRWfNCRqa22lta2HEEUBefgYBainWkV7q6utpam6htaMTgpPITYlBJdhorjpOWUWN
      Tx3ax78Wr8eN2TiO88wFvERBYJAfOKyYrPaz9v9lKj9UphZ2lI6wdPUi9IpPJF/EaTNjtjrw
      IkGt9UejlE8crIle7FYzZpsTiUyBn58fcpkEwevBajZhdbp9AuDji4KXse5OzJoQYoP9Llus
      PgHwMa3xKcP5mNb4BMDHtMYnAD6mNT4B8DGt8QmAj2nN50MALAMc2LmbTqsIjHH0w+2UNg3x
      z9D18rrsVB/aS2XP2Fm3V7vsIxza+uE53/m4vIgeJ/1ttdR3jZ2lxOiyDFN3ooyiwmOUVtQx
      YLCdQ9HxJF6njZ7malr6z1QZETEMdlJ0rJDSE7UMmZwnf1fHKFWlxVMVABHR66SjZCu/fvAn
      3P+DH/OHZ16jvGMEz+VoKcYutm5+iyYzwAi7N77BwZq+cwiASOPHz/Hd736X53Y1XlIj9bps
      HPvgbY60DJ71zmUfZMeGzRS1DV1CzD6mhOjFOtzOwV07OFR0nKq2U38HL8aeWnbvLWJcVKMP
      DUNhH+DQ3iMM2s+hFOj1YO5vZs/OnRwtKqa2+1RnTyLOoQYKi2vRh4WgEUc4vP8IvZPaoN7R
      dso7rVPVBXLTfmAjj77dxw/W/YqsEBnt5YdpGxjGHaPDaeqnob6FYZMDiSqQrPxZhGtlGLuq
      qR1Xk5uehFpuo+NEJfbIXNLCVXjddnpaamnpGUNq7cPwqdZjODff97+ok5LOuuoazwj79pQQ
      m5BC8e693LYyFb0UcJiorWnELzEd5WgrLWNqZufGMN7VQl1bHy6vhODoFLJSYz8tsMsyQOmh
      HkxuBTNyZjNDr0ahieKOn96PPi0GvG4MAx3UNXVicnhR6yLJyckgQPFFs0D5nOGy0TtgIH7u
      KrINdRSd1g+JuGXBLLgiiSDtpKFDYiTs2k5jr4PwpDMsDx1GOgatzFx+DdLOY1ScJiNW6stq
      0GRcSXJSAHjjkFj3UNcxQFROLGMjwwTGZk51BHDQ2dKOMziN9DA1EomcxNkrWDk3DaXUQXvN
      caobB7DZjdTtepVnNh1i1AM9hW/yxOu7GbMDjHNkw9N8WD0hpd2l7/L4C1toHjBhMZtxOj/R
      0uvjzcefZnfN2b2wq/s4lcORLFu9GP1INeU9kyU29/Le315iR8lhnn/kZzz63E7Mxj6OFJYz
      ZLFhG2ti49NPs7t6YHLUMNBY04zBaqXt2Hs8+fwWuqzgtPSw6S9PU9g2Ai4DlWWltA8YsJsH
      2b35ad7Y24D9rFz5uCgUWpKzcknQa8/xUkpweMTJxg+ILgdmO6jU5+h41DqycnKI9D+XVZAU
      uVzA7ZqYR4iIeL0gk0gAN+NjdnQ6/6mOABpyFi8ntuIt/vQ3NavmppAQn0CwnxKJoCJl7mqS
      50mRSQU8M2Xcs+4j2m9YcX6XqJ5u3t6wi/hrf8LdazJQ9Jfy9+1lF86CaKfqyFG8SXPIzMqi
      K9bJkSM1LInNY6L4Doq27WTWtT/hb1cVoPNXcN0tMcjkMgTRg7z9exwpqWdJSg4QQFr+PK5Y
      kYm4JJFHvvsnDlZeyU1pp6Sn0DH/qpuQyORIBJEcZTfrDh1jzbJ0Yi7Z16uPKSN6sZtGqCg8
      yFBQGleGXmylK0kpyGfwaCFt6gysQ510OIOZkxgBuPDIlHQVbpuqAEjQpa/gxz8KYd+RUg5+
      UMS7zlBW3XoLS7OicBt7OHjwEM3d43isHThEz4WNmU299FnlrEpNQikRQJhwy3MhvOZ+ik50
      kb76HgIkOmbPSeLvh0sYuD6XCa1kFwkLv8J/3ZqPSgC8Doabitl1pAqTw0NX7Riy+d7JEUBA
      JpNNuBnShBOqdTI4NII77dQ8iFgG6tmzr5g+gw1LZz1e2YILLsZ8XB4mvINWU1zahHZGNsuz
      klHLL3a/RgCpEpWfkq7OTjxOJ1q/YGQSQFCTumA1qQumbA8gIooCQXG53BQ3E4fFwP43HuON
      LfvJC1/GtpeeoC18JV9avRCZoYjjNSWTeThPsxbBi4jL5UZEOSWHCyPdzdR19jL+1v9x3zYZ
      bsswPeZgWrtHiQ0B8CN15oyJxo+XnhM7+eNLB7nm3nuZESjnuKGOinNF7HHiFKVotRqkp9ih
      WrqrePqJvxK56i6uWhiKsdRE7Tkj8HFZ8boZbCxkf42Z7DnLSYnVI7+U26BdBk4cOY4kdS5L
      EkLwuq00HS+krNaPlfnxnzqcm6JYuehpqKCyoQeHR0CpUiFBglqhwG230tlvY2Z+HsnxobgN
      45+69FHodCjtDpxuJ+N93fQYJrepdMnkRIocP16OyeFiZGgAk+XCs+vu+mK8M7/GX554gvXr
      1/P4E3/hy0k2jjWcdG19spo8jA10Mq5OZmFOKtGBAqNjpxpZe3A4XIgeB10lu6m3R5OXEX2a
      IFqMA3Ta/FmQn01CuB/GsX+HO+nphoh9uIFDlePMX7mSjPiQS2v8AE4bQyYPgauqOT0AACAA
      SURBVMH+CIKAVKYmKEDB6Og4otuF1e7AK055BBDAOcaB97ewccyEW5ChC03jzjtWEByuYPn8
      JDY99zuORyczO02GWi5DAoSlryDr78/yx1//ipx5mXhlKia82ASz+s5beeZvG3io4u/kp0eD
      QjkpjQIyuRzpaQX3Une8gbhZV6KadIMjVapIyYpn//FGxEV5yORyTlplypiRs4js/S/x05/8
      jIT0PPxUSmRSCSAQGKtj6Ph2HtjRg1X0Z803vkFehAKPQUAmkyMVBILjslg5Yy+PP/JzIhOy
      mKmWIZdKP5N7IB8giiJejwcR8Hi8iF4PHo8bEJBK3XS3dKKKyyTKT8Bzil9oQSJFKkB/1QFq
      7DEsnJuMSvTi9UxMaz3eibjc7sm4VEEkR0ioKakgYfks7CPdlNX0EDVzOR7bGKVHi1HNyPep
      Q/v41+I0j1J6eDfdZw6oqkiuuCofa/MJymp7zrpFI2XBWnJDRvj71qNEL1tLbpQa22gvRccO
      M3imCbA6jmuvm4dW8NJTf5yjlW3I1DoyC+aRHBGAVACPw0BdWYlPAHx8UfAyXF9GpUXHktnJ
      PhdJPqYbIh63G1GQTk5lLw8+AfAxrfl8KMP58PFvwicAPqY1PgHwMa3xCYCPaY1PAHxMay7q
      blDR68E00kf/8DgON8hV/kTERBF0uTzE+PjPRxTxuOyMDg3QUFnEUEABNy5MmlTNEXHbzfR2
      NFJV04rR7kKi8Cc2LZv8zDhUZ25/iiJup5Xh/h7qKoqxx67imlkRp37AcE8r+w8X4xSlBEYl
      syA/m2A/OeJ4PZvfLboYARAZqNzJX7cWodJHEKSR47HZUM+8mruXp1yGmvExLXDb6KivpH3M
      jVodiFQ49bZmDyPdrXSOSihYtZZQPyW2sXYO7imlOTyMmWFn+KJwmGiqraLfKkGp1uLgdHdL
      2AZprW1m9Y23o5V5GRkZRSGZ2PW3jw4jT1wwdW1QZ08Jz770HrG3PMiXFsahVUhw20yMOyd6
      f7d1hMPbXmd3SRtu/ziuvuV2lmREMFD2Ds8dcHLPzYm88+IGQm78Dcvt7/J8oZS58TZKSptQ
      zVjIjUuj2LPlfZrHpKz51v1cPTMUQ+tRNr22g/ZRE6jDuOLGu1g9O47Bsnd45uMxrl6o49DH
      RQwJkdxxzzdIltbwl+cLueW73yI7KgA8Xax/6Hlyvvp9rsgM9enxfB6QKolIzCJSocHWXc74
      aRZhUoJj05k3Q458srfX6MKJCRIZNXog7Iy45GpiU3JIVGsxNBw8wyLMy1BzFSOBGfgrpYCU
      0LDwT9+Njo4TpE+bujZoffFBmsVsblyWiJ9ShiBIkGsCCQ3SAG7qdjzHO00h/M8v/sC9ywJ4
      46XNdJqduCyjtDZV8uYrr9LuCSM6SI7DOEBrazfRi+7kwQe+jeXIRt6vdPOth9Zx92yBd949
      iAUQvUqWf/WH/P6Pf+Zri/1445U36LdMxtlYjUU/j/t+9ShzvJVsO1yNIiCecFcDe6p7AbA2
      HqVyVEtEZLCv8X9ekEjR+PmjVpzrWusJj0LyT6c6ImMd9bSYAkgIP4fVl1SOn78/Stk5mrHX
      TEe7Df9AD2WlJZQcr6Bz0Dxpw25nbNSOsadhqgLgZGxkHE9wBHoJMF7Bo/f9gB98//v87m8H
      MItDFB9qIW3+YsI1ArGpBUTY26kcnFBBdgzXo8i5m4cf/hkrUycuNvWLSCUlVodcqUcXriMj
      IxG1QoMuWIvgceMBdEn5ZEX7IxFFwuNn4u8exjDpF0gZnEJBdiwqmZLo2BDsDidSvxDy8+Op
      PlaBTXTSUFSCf/5ykoK+YHeIT3NEUUT0OuivPcrOonbi8guI1l7kOtPtwmIfp6+lA7+AQNSY
      KTmwj4Z+A6KoIDZvAbOSwqc6BZKh9dcgsZqwiOAXlMvP1/+WY3/9NS+09OP2xmIYM3J082O0
      bZ/MqCYCvXIier/Yldx96wJCLqoETpoPv8/G949hQYLLNEzTSOiFgwhqZi9bwTu736GoNYcT
      pS6ue3DepJGMjy8KLlM/JceO0WUP4eqbbkSnvITNSkFAKgkkff5c0oI1ICYTrDzE0bpOMiJm
      EhgWTWDYlHeBlCSmZ6D9aBclPXezIuaM+xqkAYRHBlIw/zv88Mb00zT1OloAyT8yeDwHtk62
      vfkhMbf+jq8tiZyyiyRZ+EwWprzGri17GQ1M4xtRvtb/hcI1SvnhIxj1uazJm4H/pTR+ALkG
      vc5N74ANgjUgSFCp/XC7Tvc+OcXYBXQzr+Lrq2N558k/snVfMVVVNbSPuAjW+yMlmBU3raBr
      3ybe311MVWUZu956g+Ie66VlHkDhT0RIAL3N1dTVVrH771N0kSQNYPHVi2nYtYPQnNkEXHoO
      fPzL8TDYVE2HPImVBcn4K2VndZwO0wjD45YpXJqmJDE9EUtzDW6viMdlob9/CJ0uFI/VSHt7
      G6Nmx9RdJAkSBTGZc0jRuehsaaatewh17BxuuG4h4Vol/pHpZEZJ6WxspKPfSEBSLvkpESik
      EjS6KNKSok+ODIIEv9B4UhPCkCEglSuJS0onxF+J8Mm7GTNITo5krL2BrhEbWQuvInNGGKkp
      iWjkstPiFAQBXXQSiZE6pIKAqPBSeayRZTfdTHKYn28B/DnCZTNRd/wI1Y1ttLe309M/jGFk
      gLZeE8ER/vTXV9E5ZMEw3EN7Wxttk38uTRR6rZPKjz+kxhpCUkwQbtMw1ccLqW2aiKt3aJzx
      oR7a+qxExoSiCghB6eiltLqFjrZWRr16ZuWkoJV7GOhopKGx7T9MHdrrwWwapWHf67xRp+f7
      3/sSMVrfAvjzhNftwjA2jN19xgupEr0+EI/ViNFsP3NHH21QGEpjAx8VDrJ49RLCVFI8LjuG
      sTEcZw4HUjVhoYFIBQGXy8HoyCiiIMMvUIdWKUMQQPS6MBsM/2ECYB/n0M53OD4UxNpbridR
      5zuh/s/By2hnOyZtGPF6n4skHz4uCz5lOB/TGp8A+JjW+ATAx7TGJwA+pjU+AfAxrbkog5hL
      w0FL0VH65IkU5MejutRo3Gbqy0rwxM4nK2pqV2WPNh+lrFfLnAW5BH3mHVEv4z0NlHSJrJqX
      gSD4jtf+OYjYjUO0tfdgdXpRBoYSFxuFv+rsU2EAr8tMV2s7I2Y7glxLVHwCoQFqTr1Z02sb
      pbGlG3lwHAlRQXxyMiR6PVMfASytR/nLn9+i59MnDup3beDxjYc482a607FR+t7LvLGjEgsw
      3HKE9S9uOcUjzBRxjnFk6yvsbzzDD1THAX715xdpHgUQMTQeZP1jz1Br8NJb/DbPb/6Ygcvi
      1cLLYMNhnt9y4HJE5uM8uMc7OXSgiBG3HK2/BnNPFfuOVWNznXk0BqLTSPWxQ9QO2FBr/ZC5
      xzl24BBdo9aT7rNEFz0N1dRXl1PWMMAn528exziVR3ZNfQRwGfuoONHE6k+feBjrqqeiVYUL
      MPU20G7SEKKx0toxhDwompz0eFQyLUu+fj85mjiCTD18cOgQhw71kRIfTGBIFHmZyfjJ3fS1
      NdHaZ0ARGElWxgy0cgmi18N4fyvNHQO4XUb6DXaCzsyYqYeiE7Vc6wCnoZ03NryOJfubpAcI
      WJbdy0O5QcT7gd3US3O7hXC9nI7ObuyCH5m5uQSrBLweB4OdzbT1jiHR6NDJITglkxClgMs6
      SktDE8MWF8Ptgzi9wZ/ULIa+Fhrb+3GgJi45jegQP6QuM02NbUiDdFgHujA45SSkpaMwddHY
      NYoqNJ6c5KhTdN59nMRBa001QlwBi3ImTRsTwzn84QEax1LJO8MibHygjVZrAFddMRu1XAA8
      +LOPqoZe4hYkgwCWsXFqhyA3JZKST+8jdTHQ1oYsbu7lWwN0HtrIuv97kQOVrfQ0lvLS43/i
      cIcFsHBo0xO8uqseh8vG6LgZt9PGyPAwQ2NG3G4nzce28tzrH9PX18a+N1/ktX2NuAFbXxlP
      rX+OfeXNDA4OMm5xXNAxXsvRj6h0Z3D7lVlIBIGOAy+x/qUDjAkw2n2Ex3/5GO8fqKCvr5lt
      L65n46EOPEDP8Q94/NnXqGjuobe+kOf+7wkqDABm9m96mr+9e4COvkGGRseZ9LiDc6CSl5/d
      wLHGHtprD/DccxupHzAjmnp467nHeGHrYdr7+in98AV+8+QGjlS30VVfxIvrn6F8yHaBUkxn
      BKRSCR6PB0EQJqaZoogoSDiXzYtEkIAo4hUn9MEEQBQFJKd0LnapjKD4LHSaU/t6OVHps8iK
      11/ORbCU0Jhslqy6kltvv4nZwUYau8+YewQnc9XSWegik1iz9gZuXjkXLSa2fXCA9JU3cOtt
      X+Y7d8ymdOtWGkw2Dr35KmORK7nn3ru5/porSI0MOOc80G0301m3k43vNrDi9ttJCj73SkMZ
      Es/CpSu59oa7uWNJEHVVrdg8A3yweTthC2/na1+5jRuW5uCddG9jqd7J64VjXHvv/+POW69n
      SV4KWjkgGjj49iZ6Y1bzrbtu4847v0aOrJY399RMpqQhc8FyrllzI3dcMROjRUL24qu4/YZr
      iJaM0jbqvGy1/p+FnLjMmch7T3CsuoWe3m5OFJVhDUsiMfDs39Q/PIFkfwtHSyrp6Omhta6c
      2kEZ2amREx94nXh7qshNCuZ8GmGffRF8iq6/TK5CpZQh8UiQSQXcU1CycLsG6e7sY/jANl6s
      VoOtG/NYN4Mjw7S1WEi4OZcQhRTcApLzLDwdphEqCo/R69SyOkR73u8kMgUqpRyJRIpcLkH0
      iojmDtrGZKzMSEctlUyUZzL8QGcLBGeTHq9GghvJJysrm5HWrn7ir0lDJZOA1I/E5Aj21PYA
      QYAEhUqJVCIglcmQyuQo5DIkbgkSieBzs3ReBCQyNfpQfwZ62mgYEnC7JARG+Z1zBBAEGQF6
      Pf3dgzQ3jCJ6XGiColDLpSB4MfdUcbxbw+pM4azr1j9hygIgSCQgWrHbRVBNDE0ejxdlWAif
      TTVJilQTSGpOAXNm6ABYdq2KyEio84p4PG5EuKBKszY0nrVf/TGjH6zj7c0fkPzd24kOmOK2
      j1fEI4p4Jp02nOYlTPQielx4vJy+YSyRIJdKsbsn8oYo4nK6kch8mqefCY+VxuPHGQtIYUl+
      HCqZBKd1iBOHCqkOCiE/5vSWNtpdQ3WXizkLl6HXKhDddtqriymqbOOaWXqOl3Wiy16AyWTC
      Ynfidtoxm6zI/NRIL85FEgREJRHr38uRQy1Y3F4sQ22UNRjJy0467/ByLpRKP9QuI4MWF16v
      F7kykqxYNc0DNmakZZCeOgMtVuyucPIKwmgqK6LP5MJmHGXEYD7/GkCqZdFt9xDfv49NH1dw
      prbtedElkx0pcqL8BGaHm7GRISzWCSdPMZn5qMfqOdEwjMvlZHhwEJsbUOmZUzCThqN76TO5
      sI92UnSin9y5aRdOy8eFcTkZHrcTGKJDLZciCAJKjY4QPzd9g2d6gQfz6ChodQRqFEgEAalc
      RYjOn+HhIZwON3KtlP7qYvbt28eRqnYG2ys5uO8446fEMfURQJ/O175xKxtef5yf7VAglaqI
      yVrLTXOjLqqMwQm5XJtxhCd//RBBKfP53lev55ov38Wrm7by4A+3o1QHkJg7h+uum0nuNXdx
      eP1TPPJAMRk5KRjdEjQXiFurT+K2Wxbx8MuvcCAnnfALfHsSPau/dBNPvfQSPzv+EbmpEdgn
      d9yUcQu5Y2UZm/74EIfiUogLck7uL6vIuOouVvW/xP+t+ymiVyAq+3punJ8IzraLqg8fp6DQ
      EBum4ljpCSJXLCDMX8ZoezVlbS6yrw4EYLDmEDXWKObPSUIXHoX1YDX1MaFkxepwmYcoP9FI
      aMxclIHhLFh1/adRm+r2sqM/mjUr0jj1fomLUocWRXFiVf5J4MlhRBCECUv+yf8FUZz4VhAm
      jQ9ExMlVvTD53USyAien6+Knc+OJeAWY+HLi+WRYBOH0QyhRxCuKCIJkIq3JtCe+mfBuKUgm
      dxMmgk/m14uIgCC4GekbQRWsRy2DwfJtPPxsLb946WfEfVKuyYxNhPskDpioDvG0PAucWvZP
      wn+yS3H6Ox9nIiKKXsY6qjlSVo/J4UGrjyevII/YYA3Ye9m59TARS9eSF60BUcRp7KX4WDE9
      ozYEpT9ps+aTlRCCTDi1bYGtq4LSMT3zc2KQu4xUFR2lunPUZw8AFg6+voGiLhNutxu700vU
      nOv41po8XyP9XOFluKGMCmMgS+akovjHAaaETwAQcVhMmK123F4RqUJNgL8fcqkEX/v/PCHi
      djrxSmQoLuNmg08AfExrfOfxPqY1PgHwMa3xCYCPaY1PAHxMa/4FBjFWyra+TYsqn2uvzkZ7
      qdE4xzi640PcGTezNPXy3QtzkhEOvr4d2bybWZh4ybn8x1ha2fTaARKWXc/iVP0/L50vLCKW
      4Q5OVNZjsHnRhsaRlZmG3k9+ljqM6HEx0tdKfWMnRpsTqdKf+PRskqN1yCY/djmsNFVUII2b
      SVqE/ymhvQy310x9BDDW7uAn9/2Fk+ecNsre+AM/+r8PMV4gHHgYam+kpWsUF9BbvZ37f/Us
      I+aL1Ih0m6kr3ENV7zlUiT0G9r34KN/4xrdZ/1Yx1rNtJ6aAmar9e6ntv5D1jIUjLzzIbV+5
      l+/ddx/33Xcf9933C7ZV9089GZeJ5vpG+g2Oi85hV+EGfvHYZgbO1gr4D8GLpbeG3YfrCU7O
      Z8Gi+UTLh9m/r5Cxs66SA5thiIa2fiJTcliweCF5aWE0F+6hvHUIUQSPbYzaymLqW7oYMJzS
      bjwWGor2Udxmm/oI4HVaGR0xnqJVJ+K0jDMybsULDNUepGwokBlBBorKW1BGzmTNinz8FXLi
      8uajDEpCO1TNy1t3U185ymsbpWgiU7hh5SL0Kgd1pYcprutHHZHBVSsL0ClliF43PfVFHDve
      hEN00dhvIvYceXOMdHO02sCSa7KpKC9jdHU+mkAZYOHgR3sIy1+KoquQGlsYy+ak01d9hPKG
      HmweGREZc7lidjITN7mLmPoa2LGllSF3ILMXLyYjWneKeZ0Xu3GM4Lw7+c2PVnJqf4K5j4/3
      HkefEktfdQVjBDNv8TxcrSWUNA0RlDaftfNTkCj1zF+ykIS4YDwOK0UHdxOcvQxF11FOmCK4
      emE6w83lFFc2YXBAUHQ2a1bNwtZylK07j1BVJ+H1jXZiEtNYsXQxgeIIFccOUdVlJDgxjxXz
      svBXSvHaBti9fRc9405UwfHMXbyAGaHaz/mc10lXSwd+iflkxE24g9Fl5zLYvp+OcQfBEac3
      V7UukoWLI08eWAYEkDfWy/G+cUgMxW0xoQ5LIV8U6T214KIEXWI+VwYHXb76GKzayXMvv0nV
      mIrM+AAK33qGj5tMgJ2q3e+yq7QTlzaCnPQE/ILCyMsvYG5WEhqZi7Ltr7DhQB+5eWnYK9/j
      2XeOYxdFxhs/5o9/eQ9rUCK56QloFefO7kBnDV3SCBbmzEFrrKd52DD5xsLerW9x5O9v8YfH
      n2Xb4WrGzeO0tY0TlZ5LZrScPS8/wd8bJ773upz09gwRnpaDdqyEJ55+mwHLFEcqUw/bt7zC
      jrJhItKycVW/y2/Xb6BLCCNF7+KDZ56nygJYu/jw7Xep6bPjdlo4tH0LZYe28Mhvn+Kdg9VY
      TUbaOvoInjGTWWl6qrc+xcYj/ahCEshIiiRQH01u/lyyU2egkXk4+NqTfFRnJyM9nvY9G9m4
      vxERE8c2PcWHdQKZBbOJ0brp7h6cwo3K/26kqDUKHFYrLo8XURRxO+zYkaM5xzXppxnNeL04
      bRYGhizoJq9OVIbEkRp/pl8lQKYmLFSHXCpczjWAjJiUAlYsn4veGknFrg/oG3LBqd4CNCGk
      JkajDrCRnplFqL8Sh7GbnftqWPT1h8nLi2ZmkIHv/fYDaq5Op+PNd1DPvodbr12I1tZFcbCW
      c01QmkuOEZRyNTFRCWSGuzh0ooflSZPza0sP+460csv/+xNr5iajlELcHbdNvPPE0HPsAGWV
      vdyQ6YdEriStYDH52Xoyg0XKH/4LhX23c1PK6QfvI62l7PjAMmngryJl7gIyANAx/6oVzA4T
      0DQkUtKWwOzZswkZFXn77SKGrXCW6qyjl492VnLrT55hzdw4VFKBZdfeMvnSg9D4Mc8V1XLn
      kpUkxYbiXysnLTObKH/AdoJtB4a44Zc/ZV6yimhXK7/Ysoeh1bfT39pNwMxbyMrMQZub9wW5
      IVtOXNYsBo6WsO/wECH+cgxDA8gSZ5IYcJ7rFFwGGurbMZrGGRgcxS8uh7kpEVM+xf/MAiBc
      ivOLU3C7RxnpaOW95x/jkJ8CnKMMGDwYjeMMDHiIXZ6I9oIJjFBSPkTKnYmo/QPJSI9lX1kF
      pltyJqYo0iDm33QX181NQi4Fr9tO3ZEP2b6/nEGzhb6GZuJSz45VpVKh1pjoG3DDGU4wpXIV
      Wj8/Ju6mUKCQSpi6/vUZCP4U3HgPN82Pm1Ce8zjoPHGA93YepmfMhrGrHgquP3fY8QHau1vY
      9MQv2aYCl6GXoYFkxtGx8NbrOfT8szxcFUbOgmtYe9V8QtSf7wkQgMflwOGVovFTo1RJUasU
      mGxW3KLI2ctgAAkKpRKV6Eeww834WD/jlhjUgcp/2C49dsPUBUAml4M4jtEoQoAAoge7w4U2
      NvozOaGQSNRoImaw8ts/5qqsSQVmQUAqHaRZBqNGE14izjtXczTu41i7nYitT1P9AYhuM8bO
      Zoq67mBVLKD2Jyo8BJl0ojoGSzbx2OsDfOeBH5Ef7eKj3z9C+TnidTrtOJxBRIadXUVBsTNZ
      esUVp68B+i6xAhQBxEUF80mXNdC4iz8+e4Cb7v8h30kJoe6NH/PMwHnCqvwIj0rmS99fx8L4
      T0YpCTJRwv9v77yj46rPvP+500fSFI1614yaZUmWu2WMbVwgmJ4OvGlkSd49y0khyXJCks0m
      gSSbCimcVBICeenG2DTbMe5VttUtyeq9jsr0eu99/5BcZYzMkl0b3c85+sNzf7fM+H7vr9zn
      eb4svpOfP3ELvrEetj35K37cPsK3HriLhEt4zV01RDzUHKlGm1/BCvt0Dz7PQeOenRzvTGdN
      wYySCKA1YS8smooYlkWGm4+yr7KJT2ws53LdgOgf5eCOt2c/B4jNKqY4YZRd26twhSVcvU0c
      OuVjxSL7FfUAMbHxmEKjdE6GEEURrT6ZBTk6du46RhA1KoK0VR+gZzKJpSuzaT66l86xIG7n
      AH0jExfVjQ/SdOQ4KTf+Kz99/HEee+xxHn/8x9xeLFNV1XXBQ/nMNUY8HtTmZFISTUz2tNDQ
      PXCunSwTCgYQxQi1h3fQZyhgYdrsahC9X0SDHkSDjfREC8HRViobz60w6a0p4B5mzOtHFKNI
      5hJKkybZe+gEQVmFEJ6gfn81ztAIe9/aQ49HJC7ZTpEjATEUQrrao74kkWBIRDOdDDP1p0aj
      juDzzUxqlCVx+jtNt1WpiY0zEQ5dvlAPcoje2mNMJi6+AocYnZX5pfl073+Jl7a+wcH6Ecpu
      voc7KvLQqQU8fU30RDNZsSQXgxigq7kZfd71lGZo6DtVTzClnGXFqcRZEkiWB3jx2ZfZ3TJJ
      ael8yhfOJ9x+gGee28Keg7WQPI/Swmwy7IWIbbvYvHUnvQEDsWqRhOI1lGVM35SBQXb/4yhZ
      6+5mWaZh6iZXGdEHu6gZULGgPJuu2gbSy1fhSJ5a2zckpOOuf4Mt295mVJVIslZCl7OU5fl6
      epo9hAO1bHn+FVoC6Xzy8/dSkmI6L8c4ymhLA4dPHOPI3rfZuWMHO3YcJppZTKE5Ql1jHwWr
      1pIZI+Dpb6YrmkpFeR6GyMS5bepxaur6cCxbTa4V2psaSC5ZiSNpysnGGJeAOHiCV7a+RYs7
      Frstgi+uhFULM7GaU9C7T/HSy69SNxAmv2ghixbaGT65g+c2v8H+k+0Yc4opy0tFPdnB88/8
      jW3bdtAl2fnEvXdhtxkuKBh11aHWYJDd1NW3IeuMSGEf/S111PYJLFk+D4sOOg6/zsEegezs
      BMbbKjlS1YOoEYiEArjGBqitbSOxoJTsxFjCPjfjk5OM9PYwKRuI00j4whAruzl2soPkghwl
      GlThakPCM9RJfUs3gbCEwZJKflE+ySYDsreL19+spnDDLcxL1CNG/Iz0dNAx4CQYiqLWx5Lh
      KCI3NR6tWmS0o4lTncMXFmew5rChNIXmxvqpJBpFAArXBiIjTTW0k8Ky4sz3bflSEYDCnObq
      XxdTUPgnoghAYU6jCEBhTqMIQGFOowhAYU7zP5AQo6AwS2SJSCRCVJyZ0KHRGdCqZ77FkyWR
      SCSCKMkIKjU6nfaC4siSGCUUjlxim4wYjc5eAOHxbo5WN+EJngmqNZBTtpDi7IQrqg2qoPCO
      RAK0VR+hqf+8FCsxxFDfMCV33M/avAszAaWIn56mGuq7holEJKKSgL18JWV5qRjUAkgB2mqO
      0dA9jiQJ5JZfR1leCnohyuRQD03NLbMXgL/nBH/6/StU3Ps5pjISdWiu6vfqCtcculiKV2yc
      Di2fIuBsZ+ehNualzozi84y009ATZPGaTaSZtXiGO9l36Chmy40UpsTh72vg1ICKO++6C/9o
      B/uPVmKzbcRuCtM/NIHNsejKhkAanZVFa27kuvNSWce6DvDIr3fxqXvW8+afH2di2Tf4wa1W
      Xn1xM3Vd4wQDIayLbuXB+27Dphvlh1/8Kta1H0UzUEVVQx/p6/+Fb352NbrQODtefIo9VT2I
      OgtLPvRxbl9VQPfhLbz69klGPRHMjgq+8LmPkGV5vwrjKVzdyPS2NRGTVozNOPNWnRgaJi4j
      nxSLHpUgYE7JYV5GG529TgqTVbQ39ZFUsh61SkVcUjaOhHZ6hsaw2zIoLl+EIAjvwyRYlgj7
      +/nHM88ykbWBTUtzURsTWHXH/Tz6s1/wX9++l/Dhzexp9QEykYCfgDqFodE0YwAAFqJJREFU
      T37pP/jWfavp2H2IQUT6Dv+dzQ2x3PetH/Gj736V64sSCTvreG7zcZbc8xA/e/Rr5I8f5PmD
      SvXlOUPUSXt3BHt+5iVHGyqtQNB/LspVUKmx2sx4XS6IBnF5NcTbtGe3mSw6fJMBQEClUiEI
      V5gRFvR08ofvPshLOsCQzM13f4ZFZmB4AOET3+H7dy3DZNCCFCFRHGe4rwdREjALESZc07lc
      RhOOfAdWgx6sVrTyEGHZSc32KnLXPkJhUgwqYsiKhdEDr9IhJ7EJD31OmfTMGPafbMB9a9F/
      KwdB4RpAjjJUV0koaxHZ8ZdObklKdyDvr6b6tI7cxDjksJ++viHcwSyQJKIi51x9AJUKotFz
      E2xZuoJJMIDBZOcLP3jswiFQZxtklHPHmjLMxim19dft4KlXj6MzW9FpvHS4/Jev1S9HCQZF
      dDrdBV2SGA4yPtTGnu2vYdIAZHDD0jz+25a/Clc9Ec8Ala1hltyWg+4dpprGxFzWr9dTf6qF
      ur4o+lgzcTEW4nVxoFKhUXPW7w1AlEBztrCuyGDzifdpGfSiWux1u3fiz7qDL312HTF08sSp
      9svvr4qnoDiR6rZ2fOuSiBFkRElGl5ZBVpKL2+7+IuXpBpBFIlFZEcAHHFmOMtzVgZhcQMbl
      HFEQ0FvTWbpqyqRFlsK0VO4nMcEMGiMJVonxsQhYp572nskQcTYjIOPvq+fQqfF/znuArKI8
      3Acq2bU9jCbQQf2Yi4rL7hHDirvvZ/9PnubJpwfItQDxDlYv3cCmwhM8/8xf6S23owq4cWns
      3HnH8vdeYEvhqkcMTtLcMcG8iqUzPBq8I92MRExkZdhQhfyMewKYrPHoVSJjvS20jsGS+UkI
      go6cokxaq2sQ7avxjfTQOSlTVpoAURc1VW3kVNw8+3Do8EQv1c3D5C1eSuJ5K1Ih7wj1p4co
      mF+MZXoIFPaO0lTfwKhfTXp+NgwNo89bSF6iTMPxGix55WTZjIQneqk57aa4ogQT4Bpqo7G5
      C78QQ25hCbmpZqKeEZobmxlyhzHEJVJYMo9Ui/EaqXKg8F6YbD/I261Gbtq4GJPmvP9p2cOx
      V7cwnr2RjUvSUQUmaao5QeugC1ECrTGekiVLsaeYUQuAHKSt+hjV7aPIgpqCxaspzU1E4xvg
      9a1vMqY2KfkAClcfshhFRIVarTrvQSfj66llV3OE9RuXYlJN209JIqIoTdlzqdRo1OoLhuOS
      JBKNigiCCrVGjWraHkuMilPWWooAFK4NJNwjQwQM8aSY379CBYoAFOY0SjSowpxGEYDCnEYR
      gMKcRhGAwpxGEYDCnObqzgiLhqg/sJ3BhCXcWJapGFd/0In4aW+spm1opgVOTvla5qXOLJEu
      hSZpqmtgYMKHWm/BMb+UrMQ4ziSP+Twuqo5XEpDU2DLymJ+XRcy0z8QVBsNJ+Jw97Nr2Esea
      hghrzJSuu5O71y/AoPkndSRimNbKvdTlZ3FjWeY/5xwKVw9qPWn2+Vgyzll5SP5RjhyoI6Ke
      uVov+p1UHjhMOLmYBQutRL0jVB/cjX/5WorTLQhSkJGWE6QVLsCsFRl2TuL3h4jRGQi6Bqk5
      UTV7AcjePl787U9oT/8oX/ruGpL1AboH/aiQ8I50cvJEPf0TftQxiaxcv45sixZXXw0nOyVy
      E2Tq6lsIGTO4adNq4rUC7qEWjh+vZ9gTQm/NZHnFMjLjjQiCzFhHNYeqWghEBdoHPJAPIBFw
      9nCksorhiQCa2GSWrFmD3fbudeAVrhFUamLM8Zwf/zba1o6cbCffOjMjzO3sZYQkbizJJ0Yn
      QFI8Udcg9V2jFKeb8ffV0DCWwO1LpmKRk1PSp/eM4pnwkFyyerZzAIn+2j0c6E7g7nvXkWbS
      odZZcOSkodNE6G1rYTxiJi8/G7HlLX7zp+2MRGC8/SB/+O2THGjzkpUeQ82rf+KFyhEAhltq
      GFMl4LBn4qzewi+e2QvIBHsP89ivn6IrYiM3Ow29cCZ+O0JfUxMTggVHfi5S206eeOp1hvzK
      e7wPLLJIZ1sXqdl29JcYZWg0BmQxTFgUp8IiZIlwREJr0ABButtGseXlEA6HCYenku2nXvtq
      SMotwpFqmW0PEKDzdDv+zDLmx12cAm+k+LpNZ/M4V2R62PHwTnqct5MAJOct4MZ1a0k3eZg8
      9iavd4/CqhQK1nxi2nhFJlM1xIE/HmNUqqDqpZeYzLmT79yzAUPIQ/+BLdQBoKdg9aazZi3F
      WX4OPLybwbFNpMVcNmZW4RolNFpLjz+bDY6kS5Z1N6XmUp46wqEDh0lPjUfyjjIcsLJsRQZE
      PTgnQkyqa3m9xkkkGiUmIZ/lK8pIjtOfnU++D5NgGf9wC2++8RYNnWOIwSF8vLuPr2ewkbe2
      vUVj/yReZw+DXjuEfQw5XTjWFDFzuiMTGuvgtS1bOdUzQSAwzCCKz+4HFtFD0/EWkhbejuUd
      EkBkUSIiCej1GmRJQlZr0QgikagIWomoJBOfnsd1a9cihlzUHd5PdXMCH1qayxnLlFkOgQzk
      5Nsx9jXQ7LvQazAy2cdTv/4lbaZlfPkbD/HQv93FJYxsLiTaw58f/RkDSWt54Gv/zr/eczNp
      JkBQodao8Hh9XDywkd2dPPnTX9ARfz3/9rV/5ysPfISM2V28wrWGLOPub6dJzKAiN+Ydb9Lh
      zmpa3SZWrqxgUfkClixbyYJ0OFLVAjoD8SYtap0FlSCg1Vuw56QzOTF6wTFmKQA1WYvXc13G
      EM89t5dBT5io30ljazcBf5BJn0yuIwuLPkJbXROedztcxMOkXyAj14FFJ9LV2syEH9DbWFxe
      QGflTlrHwgQ8w3T3jQEghoKMu2WyCrKJN0r01p3CObuLV7jGkMUQHR09pNkd75gOCRD2B5A1
      ejSacxZJep0Gr88LxJCVHcdAW++ZoxIMBtBpL4wkvQKLJDOFJaX4T+9i8+at7NxfQ9CcxcL5
      udjUk2zfvJUDdb3YspKYGA6zePUaYnynOT0aw/JlpcTpogw1VjEcv5g1JXlYhH5ee3kzh0/1
      EZ+agtuvYv3GVWTmFCC37+GFrTtoHowSb5RQZ5WzstRBkm6MbS++wsGqTuJyUwkPRylftYJk
      k5Ik+UEi6OqkpslD2ZIyTHr1uVU+WaSr8i0O9whkZiUQo4bu5gYmJQNGtYRrtI+qmhaSCkrJ
      STJjjE8g0l9P2GgjMNZNddMQeaULSDJrCfo8eLx+JRxa4erDN9BEqy+B0oLkCyapkrebN14/
      Sf6GWyhOMgAyEa+ThvoGRiaDCLo4cueV4Ui3ciaRzONycuzoCWRtLI6SReQmx6EWfbTW19Ix
      5FIEoHCtIDLSVEWLmExFaY5ikaSg8H6gBMMpzGkUASjMaRQBKMxpFAEozGkUASjMaa7uhJjL
      IIlRRFlAo1aDLBEVo6jUWtSKace1iywjRyPI0syFSUGjQ7iERRKyjCxGkUUJBBWCVnO2nKIs
      SxAVkaXpbRrNuTq2soQcucLq0MgiY32naWwZxORYzAJ7/HvuQgLuPprbfBSW5BOrv3KTpaaX
      v8dPa3J59D/uJ6b3IP/58E9Y/cjf+WRJ/Hu8IoX/dQJjeF74E+7qoXOfRX2ETnVg/tGLJK1K
      vGiHKNG2Y4z/dQthXxgEHcZNn8a6bgFqnUi0dg/jW/cSGfOCSou2fD3xH16P1mqAnu10f/35
      KxOAHA1w+JVn2dfazXiCm59+98MkvkeDsIn+I/zlz508+IOv4HgPAjifuNQiPv2lB0m+fClh
      haudmETM9z2M+b5zH4ldRxj+wz5M82aWQ5Yne5l8ehuam+8ncVUBcm81zj++jC87HVOxFdmQ
      jPlTD2DIS0Ue62T8d0/iOeHAtmEeYl8fmg1fuEKDDO8gJzvdbPrMvbz2xHaaej7E9fYYhN6D
      fOXHf2XT15/k5jxoO/JXfr9dw3e+eTdqZx1/+fNzdLiiaDQmKj78edYntPLYE1tobvHwk//s
      JzF/MZ//9N00PvlNOuZ9jFLvPn5/GB55+Iv467bx2oEmxv0BRH02n37gi6zIuTDe1DfawStP
      beX2BRXYCVK55WW2HW7GFw6htuTx8fs+w7Lc+EvGlCtczcgEDr2Nev5adNaZAfLRrlNEYgpI
      WlqASq1GzikjbtF+vNXtmOatQFu0AC3CVCyRNRVdWhwhXxCIEu7sR2f/0JUJwNN5hCE5l+yC
      VRTE/z/qT3dSkVuCVori83qJTEdKi5EgPr8GWQ5Qt/s1mlQr+MUvP4rO76RjIIqp8CYefMDF
      j3/TyYPf/wqO6XLTNQE3nZWbOTWu4fr1N5MQZyC2oIL/u+pekgw+dvzu+zzzynEWPHjjhT+T
      GMHn8RKVZEDAlr+aB2/6LDZDmJf/66u8suM4pfffROw1O+OZo4S68Fa6iXtw0SXH/6J7GMGU
      hqCdGkEIghZNShLRqqHpfwsgS0iTA/h3/wPfSDzWmx0geIj0uwjW/v0KBCAHqDtwAmvJx0mz
      mFm0OIvn6k4TXDf/MoYVamLNFqSxNk619ZObYMaRl3SZ9m7axvN49JtfpCQrAY0AUUM2bvck
      wz4Jiy0Of9s4octeqImcfIFJt5Mhl4QlxUJgzIskcg1P+ecgcpTQ9ucQ53+YmOy4S+Z9y2IY
      ZBXnNqoQNHrkkP9sm/CeJxl65ijqgmVY77wNfXIcIBH3uW9gcPlnf0uIE028faIPT1Ezb7w0
      gHMwSFtlJf3+Tcx7x730lG/6NPdpd7J/81/Y5g5RuPYe7tpY9g7trazaeCPF2YloBYgEhnn9
      yT9TPSYRa9Tj6mwjbCu//HW6utnyzDNUj2mIN6gZ7egk7Fg526+pcJUgjdYzvstF/PcqUL3D
      Soug1oEgcS57SkaOhhF05+YLunX/QuaKjxCqPojrhb8Que0+LMuyUadkok6Z7TNRlhk5fYrB
      uFLu3VCKCchO0tPfuoUjrV6KMjQYVCpkZGQZzsbXySBprCy/5W6W3xTEeWoLD//2RRYuLSMR
      gTNXfi4eT5hy8p5WtH/oJHvqvNz78LdZkRvD6W0/4udVl79UZ/MhdjSreOiHX6PApKVq8/f4
      e8esvqXCVYIsRwidOIqUtxqj7Z3bqS3pyKER5KgIWjWyHEF0OlEnOqaPI4OgQhWbgGHVbQjB
      ccYOn8SyLGs6OX6WLpFydJKTx6qxLfwIN6088zT1IbYd5dl9J/jkl0tZkmnj5NvbsAxYaD5S
      h4slILo58tprNHpjcaRZcbW0kFZeQYoJTCwkz3aAN958g/L5hZQVz+xHdPHZpOjdnDj0Nr4W
      ger9jQT1BTPanY8lNZc04Sh79uxnyBxl79t1+O0LZ/M1Fa4SZM8AnoPdmD71MS6uhhbtrCUc
      TMRQnIEmuwjN5H48tZ1YljuQ+5vw1rmIvbsAgi6CLZ2oUnLRp1qRfROEe4ZRJxYgO/vwVdWj
      mV8xy4wwSQaDhdLyBaRazszGtViSUki2JZKW46CwIBtVyI2ot7F89fXMz7WTk51OekYqmqiP
      SbcfXXIJd9x+A2kxKrQGEw57JlGfj6g2jvS0ZBISE8l25JNqncoD1WjjcdiTiAQCaBMcXHfd
      cooK88hNi8cYYyHTXogjIwG9Xk9yVg55+bnEJ6SRn5VIwO1Bbc5m3cbVFOY6yEq1olbee18T
      RKtewdOfhfXW5ajPt0iSnEz+/If4WUBsaQoqowldug7vSy/i2b0b35E6NKs+gnlpHio5QOjk
      Ptxb38C9aze+Q1WIcQVYb12NJk5FtLcR71tvKfkAClcfcsiPJGlQGXXnTX4lxNo3GH5jgqRv
      fArtdHlDZAnJ50UKR0GtRRUXh2rKIAw5GkHyB6aGSCoNqpiY6TfFIEsist+nCEDhWkEk0tSA
      aMnGkP7+ve1XBKAwp1FGxQpzGkUACnMaRQAKcxpFAApzGkUACnOa/7XwsK5jr3Lck8GHVi/D
      PNP7QGHOEqK7roZ2p+/cR/pEliybj0U383aN+sdobmxm1B1Gb0mhtKwY80UFRUXvMDUN7ehT
      CplnT0T0OGlqqGM8MGsByEhhH02HtvLC9ho8IZlEewkbbrmFZfkpXCpT7d0YajrIvuFFrKlQ
      BKBwHqKLtoZBEtasIOVMnpRaj/ESr/EjniGO7D+GkFlMYaGB0c4G3t7jYc2apdiMUzVFZSlI
      Z2MjwwMDeAMJFNgT0RjiyM4rJkWctQAidOx7ll9sm+Ch7z1CYbyavobj9Pq8iFEL3acqcarT
      EJyt9E6EsS9ay4LceFRSmMH2BupPd+OJgCmliLXXFWMQBLKX3sknohlYjBKT/aep7BFZmBKh
      5lQXEWMqSyuWkzLDjEPhg47snmTCmMjyzDRM79J2tK+VgCWfG0oL0KsF0lISCP5jO6d7c1lZ
      kAICeCe8tLv1lOQmccw1tZ9aa8CWnAbMeg4Qpr+7l7A5F4dNjyBoyF5wHasW5qGTfFTvfJ4/
      PLubkNFKXKiF3/zyd1T1eIj6XTSdaiSos5BgDLDn6cd4+eQYMtC693me31mNNyoxcvogf3zs
      V+w7PUGMTc/RF/7IloOthN/zz6hwrRL0uBFNZmJkedr2aPrvEm3DgTBGk+lsjJdKoyctzcLY
      qJszkcZhrZrEvBKsxks/62fZA8SyZMMmDvz2bzzya5F1y4uYN28+KVYjZ57RjsVruL6iGCoq
      GKn7DLuON7Pgo8vY8OFPTbeIYh0+yu/31nLn0g0zT5G9mI/dvA5BEBCrd7Gje5AQ89DN7gIV
      PiBEBAMxrnpefP4UMqCPs+EoLqfUkYL2opzWGHMMzqYuxh0pJJl0SKKISq3F7ZmcaiAFCLWd
      pHzxRgJNlz7fLAUgEGev4Mtft3H0ZB2tR17nzS07WX/3vdw0/2I7JBVpqTZqJ9yIkTB9p4+w
      fe9xhlxBJto7oOSKfg+FOYY5q5Tbs0qBKR/f8b5GDhypxJRwE/nxF+YFJ2SWUOw8zuHdb6FS
      adDqjRhlL6jNgIyru5baiSQ2XeZ8s54Ey7KAKW0eN95WSDQc5MjLP+Zvr+zjurybL2obxel0
      EzffyFjnXn71xE5uuO8L3JmXQMuWQZ52zfq3UJjjCCoNtqwCClta6HdGZghAbTBRtGwNOcEQ
      ogQqlcxwywmCETOib4RjJ7oxlyylv78f/7iHgGecwX4naekJ6AUBWQrNfg7QVXeM43XdBEUZ
      tVrC4wphMsWeLUTl93mJihHGTu9lX4+ORfPzkH0jBHRJFDpyMIoTtPdNvt+/kcIHCSmKz+cj
      Ip434o+G8QbVxMZe6lYVUKm1xMTGYTLFYdDC8KiPjFQboqwlJSuFyEgvra2tdA6M4x0boL21
      l8D03mGvc7Y9gJoYvUTNtr/y0tOTRAQtaTmL+Pz/2UisLgpA7/FX+X7js7jCKtbe/xAb5iej
      8V1PRdbv+c2j3yKrpIJcWzJW/ZSxtS7WgkVlQCUIqHWx2CyRs2fTxVowaxUD7DmHHGGg8Rit
      XjMLS/OI00H/6Uo6pERutulBlug9+Q9ORRysXVmAxuPkdNcgtrRMYtVR+hpPMmHMpSzNgl6r
      orzihrOH9jRJTA5lcP0NRUytusuMdTW/D+HQoTE2/+o/aLZ/iW9/vPjd2ysoXA4pwkh3E/XN
      vfijYM3Ip6w4D4tRg+zr4c3XjmNfdyslKQZkMcRo92nqWvoIiipsmUUsKbOjv0RnERxspsFt
      ZWFR6vRTP0pH7QmlUIjCVYZKS7J9ARvsCy7aIDLaPYSpeDFFKVNzAUGtJ9mxgI2Oi9vOxJA2
      j6Vp53+iwVFewf8H+TV4XnlhLbIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Major group' width='179'>
      iVBORw0KGgoAAAANSUhEUgAAALMAAADACAYAAABPolKcAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAASLElEQVR4nO2cfXAUZZrAfwMD4SMQDZMsgssiUAEioqcjG8JHUEZE5IBFiRg/uOUwuwue
      q5xwWMQLKmjkEF1rQc2KCnVGF0EpBAVu4IRNUnMxfsCSgBxECkngkpAEEkhCWvr+SCbkm0ky
      SXe/8/yqpirp6fftZzq/PPP08/aMTdd1HUFQgC5GByAI/kJkFpRBZBaUQWQWlEFkFpRBZBaU
      QWQWlEFkFpRBZBaUQWQWlEFkFpRBZBaUQWQWlEFkFpRBZBaUQWQWlEFkFpRBZBaUQWQWlEFk
      FpRBZBaUQWQWlEFkFpRBZBaUQWQWlEFkFpRBZBaUQWQWlEFkFpRBZBaUQWQWlEFkFpRBZBaU
      QWQWlEFkFpRBZBaUQWmZ3cucOJ1XH1Ex9/Lo0k/IrjQ6sk7GvQyncxnuZp4u2/YkTueTbCtr
      +Mwh1k5zMuPNbABykmNbnMdolJYZgCHxbM7MJDMzk/1/TeT2068xf+nnNPq7BTDB0dGMJhOP
      R6v/RI4HT344kyZFAjAkfjOZmUm4DIjRF9SXuQ5B/aN56vHxaGlpeGq2acc+ZencGKKcTqJi
      5rL002N4/6Q5ybE4Y5PJoQR34nTG1WSlnORYnLNf5uNNS5kbE4XTOY4Hk9I4eWQLiTVzjZue
      iLvEe+Qctv/7AmbGRFW/S4ybzKNJaZRUH4RYZyxv7ttJ0oLpjKuJY42nzr+bdoxPl84lJsqJ
      MyqGuUs/5djVIFsc717mxLnMDbhZVvMOFZucU//EhLtwjdb4yv0VdXXO93jICXfhGl3nfNTJ
      zHXPnTMqhpkLknCfqXmyzMOGf3mUyeO874ozeSrl6rltcWwbCSiZG1HmJiH+YxyLt5Kamcn+
      tyZyevVCkhpkqJJtCST+j4Poaf/ADd6NRcfJuzGeDXs9pK2/n0tblvPil6E8tmEvnrT13H9l
      J8mbvdIUUeGI49Xt+8nMzCTtLw9wZdty/pTmPc4p9u0rZ+rKraR5dvH8nWf5OHk7+dVB4k6I
      52PHYramZpK5/y0mnl7NwiRPHfGaH+9KyiQzyQW4SKp5h9ocP6TBiajOvprHQ2bttnzc7kM1
      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
    </thumbnail>
    <thumbnail height='192' name='Major group and Visa' width='192'>
      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
      XmHHr/8jjSUmQCHqnaZ3YISM2sqmrVsp18e50j+HlAuRUtlprtBwfWSRtm37qDKK6LTaOxo3
      JRPl2tVJ6jdswCpGGeiboWndOsy6gjHtUVCYAR4H+RhDfb109fSyGEiQk7Ws376PNkea05cG
      IbtK1+VRqto7yE73MBy2sMmt4tzF68QTIa5evc5XCQIFjZbY/HVuzkVIL43RPxtBLHjLPTIK
      M8DjQNTirKjEbTNhNWiIeObovrlIOu4nZFwDWDEWlVBis2E06jE5SrHkFsgmkt82+ol6WtbU
      c3J0lGLTIo0d+zD81QdW/3gUZoDHgajDWenCXeXCohPouTrElmeO8Pz+rfwQL4hiVwv4p7ix
      KtHqLrqfwb3AQ1CYAR43gopah4lzJ47h0GfJyJUPXYTGVMI6Z5YLcdeTd+rlY6ZgCX4MfNWl
      giCAonzLx1+A+/v93773VoE5rn/xLpHmV9nXYOGhTnoq8L0UZoDHwDfOIhOEey5ZHmgMCwKQ
      Z6L3EnO6Vp6vKwz+R01hBijwRFPYBBd4oikIwM8Q78Qgo0uh77kizWh/H97Yg50/kA3Mcm1i
      5Z5xF6nIIlcGJn9QOx+G4MIY44tfnzExM3wNb/Rhj7t/eAp7gEdOjv6zx5lcTVQbKP4AACAA
      SURBVAFq3B3b2dlW9dClROYHGY072NJeyZ8mRvRODDLlMNHqunUGcd9n/y9fLotU2oxgdfHS
      wTZG+q7SUNaGsDLIgljD5oZvZ8bwjPbh01dTn5tlYKyINU3lt+tS8Ixfxaeup0qzyJX+MNs2
      uum52EvLpm0w280Jv5O39rc9MpVsYGGMcVFNc9WtMyambw7gsNZSZn18SeGV0GxBAB45mWU6
      rwd465/+Drs2TzIPyYUBPr7iwaZOEJFtPH/4INroHBcvDxBNQ/Pmfayv0nPl4llmA1lc7dto
      EVdZCRqQkmEud19k0Z9AtLl54eDOb1WZzwq07XqG5zvct38J3/5fIRX24VOVIWXiXOs8y5gv
      jUFU0fzUc+hDPlZNTuoNEPNN88XH4ySEUg4/v59k2MuqppKqO3Ij4V32UFHr5caVXkYDRj6R
      olThI1+9je0NdrqOfkTprpdptuvIpv10nriIL5XCVL6WZ3Y10nv8KFlHJYGZaYrb9vL0hiom
      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
      DD7ZISl6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 15 country of birth' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total oversea-born and Australian' width='192'>
      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
      vvr/A/DBUXI8BrZwAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
